[{"C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\index.js":"1","C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\reportWebVitals.js":"2","C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\App.js":"3","C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\theme\\mui-theme.js":"4","C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\components\\AddAppointment.js":"5","C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\components\\CanGetVaccinated.js":"6","C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\components\\NavBar.js":"7","C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\context\\users-context.js":"8","C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\context\\stations-context.js":"9","C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\components\\VaccineConfirmation.js":"10","C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\components\\ArrivalToCprStationConfirmation.js":"11","C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\components\\WaitingRoomLayout.js":"12","C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\components\\VaccineWaitingRoom.js":"13","C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\components\\CPRWaitingRoom.js":"14","C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\components\\FooterBar.js":"15","C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\components\\Home.js":"16","C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\utils\\api.js":"17","C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\components\\Header.js":"18","C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\components\\Station.js":"19","C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\components\\IsSoldierArrived.js":"20"},{"size":1405,"mtime":1609041938175,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1608896020677,"results":"23","hashOfConfig":"22"},{"size":2591,"mtime":1609042837370,"results":"24","hashOfConfig":"22"},{"size":232,"mtime":1608896020678,"results":"25","hashOfConfig":"22"},{"size":17897,"mtime":1609041936586,"results":"26","hashOfConfig":"22"},{"size":17825,"mtime":1609041704613,"results":"27","hashOfConfig":"22"},{"size":1406,"mtime":1609041937541,"results":"28","hashOfConfig":"22"},{"size":888,"mtime":1609041938098,"results":"29","hashOfConfig":"22"},{"size":929,"mtime":1609041938027,"results":"30","hashOfConfig":"22"},{"size":6549,"mtime":1609043555327,"results":"31","hashOfConfig":"22"},{"size":7059,"mtime":1609043454110,"results":"32","hashOfConfig":"22"},{"size":2322,"mtime":1609041937983,"results":"33","hashOfConfig":"22"},{"size":897,"mtime":1609041937908,"results":"34","hashOfConfig":"22"},{"size":1003,"mtime":1609041937096,"results":"35","hashOfConfig":"22"},{"size":1021,"mtime":1609041937168,"results":"36","hashOfConfig":"22"},{"size":4327,"mtime":1609041937427,"results":"37","hashOfConfig":"22"},{"size":1262,"mtime":1609041938227,"results":"38","hashOfConfig":"22"},{"size":256,"mtime":1609041937232,"results":"39","hashOfConfig":"22"},{"size":754,"mtime":1609041937645,"results":"40","hashOfConfig":"22"},{"size":7264,"mtime":1609043144027,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"kq00uj",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":3,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},"C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\index.js",[],["88","89"],"C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\reportWebVitals.js",[],"C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\App.js",[],"C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\theme\\mui-theme.js",[],"C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\components\\AddAppointment.js",["90","91","92","93","94","95","96"],"import React, {useState} from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport axios from 'axios';\nimport {\n  Button,\n  FormControlLabel,\n  List,\n  ListItem,\n  Radio,\n  TextField,\n  Typography,\n  Grid,\n  createStyles,\n} from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nconst TIMEOUT = 6000;\n\nfunction SimpleDialog({open, soldierId, setOpen, give, setOpen2}) {\n  const {center, text} = useStyles();\n\n  return (\n    <Dialog open={open} style={{margin: '3rem'}}>\n      <DialogTitle className={center}>\n        <p>רגע לפני כניסה לאזור ההמתנה באולם,</p>\n        <p>וודאו כי המספר האישי שהוזן תקין</p>\n      </DialogTitle>\n      <DialogContent>\n        <Typography variant=\"body1\">\n          <div style={{marginBottom: '3rem'}}>\n            <TextField\n              size={'small'}\n              className={center + ' ' + text}\n              variant=\"outlined\"\n              value={soldierId}\n              InputProps={{\n                readOnly: true,\n              }}\n            />\n          </div>\n          <List>\n            <ListItem>\n              <div style={{marginLeft: '2rem'}}>\n                <CoolButton\n                  text=\"לא, חזרה לעריכה\"\n                  action={() => {\n                    setOpen(false);\n                  }}\n                />\n              </div>\n              <CoolButton\n                text=\"המספר תקין, תודה\"\n                action={() => {\n                  give();\n                  setOpen(false);\n                  setOpen2(true);\n                  setTimeout(() => setOpen2(false), TIMEOUT);\n                }}\n              />\n            </ListItem>\n          </List>\n        </Typography>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nfunction SimpleDialog2({open}) {\n  const {center, text} = useStyles();\n\n  return (\n    <Dialog open={open}>\n      <DialogTitle className={center}>\n        <p>זה נראה קרוב מתמיד,</p>\n        <p>אבל אנחנו עדיין מוגבלים בכמות האנשים באולם בעקבות ההנחיות</p>\n        <p>המתינו מספר דקות ונאשר את כניסתכם</p>\n      </DialogTitle>\n    </Dialog>\n  );\n}\n\nconst CoolButton = ({text, action, isDisabled}) => {\n  const {button} = useStyles();\n  return (\n    <Button\n      className={button}\n      style={{backgroundColor: 'white'}}\n      variant=\"outlined\"\n      color=\"default\"\n      disabled={isDisabled}\n      onClick={() => {\n        action();\n      }}>\n      {text}\n    </Button>\n  );\n};\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    button: {\n      width: 'fit-content',\n    },\n    background: {\n      'background-color': '#EEEEEE',\n    },\n    center: {\n      display: 'flex',\n      'justify-content': 'center',\n      'align-items': 'center',\n      textAlign: 'center',\n    },\n    bold: {\n      'font-weight': 'bold',\n    },\n    text: {\n      '& .MuiInputBase-input': {\n        backgroundColor: 'white !important',\n        fontSize: '110%',\n        textAlign: 'center',\n        width: '7rem',\n      },\n    },\n    fullWidth: {\n      width: '100%',\n    },\n    left: {\n      float: 'right',\n    },\n    grid: {\n      'text-align': 'left !important',\n      width: '75%',\n      display: 'inline-block !important',\n    },\n    radio: {\n      display: 'none',\n    },\n    radioBox: {\n      backgroundColor: 'white',\n      cursor: 'default',\n      border: 'solid 1px lightGray',\n      display: 'block',\n      paddingRight: '1.5rem',\n      paddingTop: '0.1rem',\n      paddingBottom: '0.1rem',\n      paddingLeft: '1.5rem',\n      'border-radius': '5px',\n      marginLeft: '0',\n      textAlign: 'center',\n      border: 'solid 1px lightGray',\n      outline: '0',\n      cursor: 'pointer',\n    },\n  })\n);\n\nconst AddAppointment = () => {\n  const {\n    background,\n    center,\n    bold,\n    fullWidth,\n    left,\n    grid,\n    radioBox,\n    radio,\n    text,\n  } = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [open2, setOpen2] = React.useState(false);\n\n  const [soldierId, setId] = React.useState('');\n  const [q1, setQ1] = React.useState('');\n  const [q2, setQ2] = React.useState('');\n  const [q3, setQ3] = React.useState('');\n  const [q4, setQ4] = React.useState('');\n\n  async function getResultAddSoldierToSoldierTable() {\n    let data = {\n      soldierId: soldierId,\n      arrivalTime: 123,\n      q1: q1,\n      q2: q2,\n      q3: q3,\n      q4: q4,\n    };\n    return await axios.post(\n      'https://corona-server.azurewebsites.net/addSoldierToSoldierTable',\n      data,\n      {headers: {'Content-Type': 'application/json'}}\n    );\n  }\n\n  async function getResultAddSoliderToArrivalQueue() {\n    let article = {soldierId: soldierId};\n    return await axios.post(\n      'https://corona-server.azurewebsites.net/addSoliderToArrivalQueue',\n      article,\n      {headers: {'Content-Type': 'application/json'}}\n    );\n  }\n\n  async function give() {\n    await getResultAddSoldierToSoldierTable();\n    await getResultAddSoliderToArrivalQueue();\n    setId('');\n    setQ1('');\n    setQ2('');\n    setQ3('');\n    setQ4('');\n  }\n\n  function isValid() {\n    return (\n      soldierId.length === 7 && q1 !== '' && q2 !== '' && q3 !== '' && q4 !== ''\n    );\n  }\n\n  return (\n    <div>\n      <div className={background}>\n        <FormControl>\n          <List>\n            <ListItem>\n              <label\n                className={center + ' ' + fullWidth}\n                style={{fontSize: '120%'}}>\n                הכנס מספר אישי\n              </label>\n            </ListItem>\n            <div className={fullWidth}>\n              <TextField\n                size={'small'}\n                inputProps={{\n                  maxLength: 7,\n                }}\n                error={soldierId.length !== 7}\n                className={center + ' ' + text}\n                variant=\"outlined\"\n                value={soldierId}\n                onChange={(e) => {\n                  const value = e?.target?.value;\n                  if (\n                    value.length === 0 ||\n                    (value[value.length - 1] >= '0' &&\n                      value[value.length - 1] <= '9')\n                  ) {\n                    setId(e?.target?.value);\n                  }\n                }}\n              />\n            </div>\n            <div className={grid + ' ' + center}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <label className={bold}>אנא ענו על השאלות הבאות</label>\n                </Grid>\n                <Grid item xs={8}>\n                  <div>\n                    <label component=\"legend\">\n                      האם סבלת ממחלה עם חום מעל 38° ביומיים האחרונים?\n                    </label>\n                  </div>\n                </Grid>\n                <Grid item xs={4}>\n                  <div className={left}>\n                    <List style={{padding: 0}}>\n                      <ListItem style={{paddingRight: 0, padding: 0}}>\n                        <FormControlLabel\n                          className={radioBox}\n                          style={{\n                            backgroundColor: q1 === true ? '#000066' : 'white',\n                            color: q1 == true ? 'white' : 'black',\n                          }}\n                          tabIndex=\"1\"\n                          control={\n                            <Radio\n                              className={radio}\n                              color=\"primary\"\n                              checked={q1 === true}\n                              onChange={() => {\n                                setQ1(true);\n                              }}\n                            />\n                          }\n                          label=\"כן\"\n                          labelPlacement=\"start\"\n                        />\n                        <FormControlLabel\n                          className={radioBox}\n                          style={{\n                            backgroundColor: q1 === false ? '#000066' : 'white',\n                            color: q1 === false ? 'white' : 'black',\n                            marginRight: '1rem',\n                          }}\n                          tabIndex=\"1\"\n                          control={\n                            <Radio\n                              className={radio}\n                              color=\"primary\"\n                              checked={q1 === false}\n                              onChange={() => {\n                                setQ1(false);\n                              }}\n                            />\n                          }\n                          label=\"לא\"\n                          labelPlacement=\"start\"\n                        />\n                      </ListItem>\n                    </List>\n                  </div>\n                </Grid>\n                <Grid item xs={8}>\n                  <label component=\"legend\">\n                    האם ידועה אלרגיה לתרופה, חיסון או מזון?\n                  </label>\n                </Grid>\n                <Grid item xs={4}>\n                  <div className={left}>\n                    <List style={{padding: 0}}>\n                      <ListItem style={{paddingRight: 0, padding: 0}}>\n                        <FormControlLabel\n                          className={radioBox}\n                          style={{\n                            backgroundColor: q2 === true ? '#000066' : 'white',\n                            color: q2 === true ? 'white' : 'black',\n                          }}\n                          tabIndex=\"1\"\n                          control={\n                            <Radio\n                              className={radio}\n                              color=\"primary\"\n                              checked={q2 === true}\n                              onChange={() => {\n                                setQ2(true);\n                              }}\n                            />\n                          }\n                          label=\"כן\"\n                          labelPlacement=\"start\"\n                        />\n                        <FormControlLabel\n                          className={radioBox}\n                          style={{\n                            backgroundColor: q2 === false ? '#000066' : 'white',\n                            color: q2 === false ? 'white' : 'black',\n                            marginRight: '1rem',\n                          }}\n                          tabIndex=\"1\"\n                          control={\n                            <Radio\n                              className={radio}\n                              color=\"primary\"\n                              checked={q2 === false}\n                              onChange={() => {\n                                setQ2(false);\n                              }}\n                            />\n                          }\n                          label=\"לא\"\n                          labelPlacement=\"start\"\n                        />\n                      </ListItem>\n                    </List>\n                  </div>\n                </Grid>\n                <Grid item xs={8}>\n                  <label component=\"legend\">\n                    האם בידך מזרק אפיפן בעקבות תגובה אלרגית משמעותית?\n                  </label>\n                </Grid>\n                <Grid item xs={4}>\n                  <div className={left}>\n                    <List style={{padding: 0}}>\n                      <ListItem style={{paddingRight: 0, padding: 0}}>\n                        <FormControlLabel\n                          className={radioBox}\n                          style={{\n                            backgroundColor: q3 === true ? '#000066' : 'white',\n                            color: q3 === true ? 'white' : 'black',\n                          }}\n                          tabIndex=\"1\"\n                          control={\n                            <Radio\n                              className={radio}\n                              color=\"primary\"\n                              checked={q3 === true}\n                              onChange={() => {\n                                setQ3(true);\n                              }}\n                            />\n                          }\n                          label=\"כן\"\n                          labelPlacement=\"start\"\n                        />\n                        <FormControlLabel\n                          className={radioBox}\n                          style={{\n                            backgroundColor: q3 === false ? '#000066' : 'white',\n                            color: q3 === false ? 'white' : 'black',\n                            marginRight: '1rem',\n                          }}\n                          tabIndex=\"1\"\n                          control={\n                            <Radio\n                              className={radio}\n                              color=\"primary\"\n                              checked={q3 === false}\n                              onChange={() => {\n                                setQ3(false);\n                              }}\n                            />\n                          }\n                          label=\"לא\"\n                          labelPlacement=\"start\"\n                        />\n                      </ListItem>\n                    </List>\n                  </div>\n                </Grid>\n                <Grid item xs={12}>\n                  <label>\n                    האם פותחה בעבר תגובה אלרגית חמורה לאחר מנת החיסון הראשונה\n                    לנגיף הקורונה?\n                  </label>\n                </Grid>\n                <Grid item xs={12}>\n                  <div className={left}>\n                    <List style={{padding: 0}}>\n                      <ListItem style={{paddingRight: 0, padding: 0}}>\n                        <FormControlLabel\n                          className={radioBox}\n                          style={{\n                            backgroundColor: q4 === 'yes' ? '#000066' : 'white',\n                            color: q4 === 'yes' ? 'white' : 'black',\n                          }}\n                          tabIndex=\"1\"\n                          control={\n                            <Radio\n                              className={radio}\n                              color=\"primary\"\n                              checked={q4 === 'yes'}\n                              onChange={() => {\n                                setQ4('yes');\n                              }}\n                            />\n                          }\n                          label=\"כן\"\n                          labelPlacement=\"start\"\n                        />\n                        <FormControlLabel\n                          className={radioBox}\n                          style={{\n                            backgroundColor: q4 === 'no' ? '#000066' : 'white',\n                            color: q4 === 'no' ? 'white' : 'black',\n                            marginRight: '1rem',\n                          }}\n                          tabIndex=\"1\"\n                          control={\n                            <Radio\n                              className={radio}\n                              color=\"primary\"\n                              checked={q4 === 'no'}\n                              onChange={() => {\n                                setQ4('no');\n                              }}\n                            />\n                          }\n                          label=\"לא\"\n                          labelPlacement=\"start\"\n                        />\n                        <FormControlLabel\n                          className={radioBox}\n                          style={{\n                            backgroundColor:\n                              q4 === 'first' ? '#000066' : 'white',\n                            color: q4 === 'first' ? 'white' : 'black',\n                            marginRight: '1rem',\n                          }}\n                          tabIndex=\"1\"\n                          control={\n                            <Radio\n                              className={radio}\n                              color=\"primary\"\n                              checked={q4 === 'first'}\n                              onChange={() => {\n                                setQ4('first');\n                              }}\n                            />\n                          }\n                          label=\"חיסון קורונה ראשון\"\n                          labelPlacement=\"start\"\n                        />\n                      </ListItem>\n                    </List>\n                  </div>\n                </Grid>\n                <Grid item xs={12} style={{paddingLeft: 0}}>\n                  <div className={left} style={{marginTop: '1rem'}}>\n                    <CoolButton\n                      text=\"שלח\"\n                      action={() => {\n                        if (isValid()) {\n                          setOpen(true);\n                        }\n                      }}\n                      isDisabled={!isValid()}\n                    />\n                  </div>\n                </Grid>\n              </Grid>\n            </div>\n          </List>\n        </FormControl>\n      </div>\n\n      <SimpleDialog\n        open={open}\n        soldierId={soldierId}\n        setOpen={setOpen}\n        give={give}\n        setOpen2={setOpen2}\n      />\n      {/* <SimpleDialog2 open={open2}/> */}\n    </div>\n  );\n};\n\nexport default AddAppointment;\n","C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\components\\CanGetVaccinated.js",["97","98","99","100","101"],"import React, {useEffect} from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport axios from 'axios';\n\nimport {\n  Button,\n  FormControlLabel,\n  List,\n  ListItem,\n  Radio,\n  TextField,\n  Typography,\n  Grid,\n  createStyles,\n} from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nconst TIMEOUT = 3000;\n\nfunction SimpleDialog({open}) {\n  const {center} = useStyles();\n\n  return (\n    <Dialog open={open}>\n      <DialogTitle className={center}>הפרטים נשלחו!</DialogTitle>\n      <DialogContent>\n        <Typography variant=\"body1\">ניתן לקרוא למתחסן הבא</Typography>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nconst CoolButton = ({text, action}) => {\n  const {button} = useStyles();\n  return (\n    <Button\n      // disabled={q5 !== null}\n      className={button}\n      style={{backgroundColor: 'white'}}\n      variant=\"outlined\"\n      color=\"default\"\n      onClick={() => {\n        action();\n      }}>\n      {text}\n    </Button>\n  );\n};\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    button: {\n      width: 'fit-content',\n    },\n    background: {\n      'background-color': '#EEEEEE',\n    },\n    center: {\n      display: 'flex',\n      'justify-content': 'center',\n      'align-items': 'center',\n    },\n    bold: {\n      'font-weight': 'bold',\n    },\n    text: {\n      '& .MuiInputBase-input': {\n        backgroundColor: 'white !important',\n      },\n    },\n    fullWidth: {\n      width: '100%',\n    },\n    left: {\n      float: 'right',\n    },\n    grid: {\n      'text-align': 'left !important',\n      width: '50%',\n      display: 'inline-block !important',\n    },\n    radio: {\n      display: 'none',\n    },\n    radioBox: {\n      backgroundColor: 'white',\n      cursor: 'default',\n      border: 'solid 1px lightGray',\n      display: 'block',\n      paddingRight: '1.5rem',\n      paddingTop: '0.1rem',\n      paddingBottom: '0.1rem',\n      paddingLeft: '1.5rem',\n      'border-radius': '5px',\n      marginLeft: '0',\n      textAlign: 'center',\n      border: 'solid 1px lightGray',\n      outline: '0',\n      cursor: 'pointer',\n    },\n  })\n);\n\nconst CanGetVaccinated = () => {\n  const {\n    background,\n    center,\n    bold,\n    fullWidth,\n    left,\n    grid,\n    radioBox,\n    radio,\n    text,\n  } = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const [soldierId, setId] = React.useState('');\n  const [q1, setQ1] = React.useState();\n  const [q2, setQ2] = React.useState();\n  const [q3, setQ3] = React.useState();\n  const [q4, setQ4] = React.useState('');\n  const [q5, setQ5] = React.useState(null);\n\n  useEffect(() => {\n    getSoldierInfo();\n  }, []);\n\n  async function getInfo() {\n    return await axios.get(\n      `https://corona-server.azurewebsites.net/SoldierInfo/100`\n    );\n  }\n  function getSoldierInfo() {\n    getInfo()\n      .then((res) => {\n        const data = res['data'];\n        setId('');\n        setQ1(data.q1);\n        setQ2(data.q2);\n        setQ3(data.q3);\n        setQ4(data.q4);\n      })\n      .catch((rej) => {\n        alert(rej);\n      });\n  }\n  async function getResultDeclareSoldierVaccinable() {\n    return await axios\n      .put(\n        `http://corona-server.azurewebsites.net/${soldierId}/vaccination_ability`,\n        {\n          isAbleToVaccinate: q5,\n        }\n      )\n\n      .catch((rej) => {\n        alert(rej);\n      });\n  }\n\n  function isValid() {\n    return (\n      soldierId.length === 7 && q1 !== '' && q2 !== '' && q3 !== '' && q4 !== ''\n    );\n  }\n\n  return (\n    <div>\n      <div className={background}>\n        <FormControl>\n          <List>\n            <ListItem>\n              <label\n                className={center + ' ' + fullWidth}\n                style={{fontSize: '120%'}}>\n                מספר אישי\n              </label>\n            </ListItem>\n            <div className={fullWidth}>\n              <TextField\n                className={center + ' ' + text}\n                variant=\"outlined\"\n                value={soldierId}\n                onChange={(e) => setId(e?.target?.value)}\n              />\n            </div>\n            <div className={grid + ' ' + center}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <label className={bold}>תשובות החייל</label>\n                </Grid>\n                <Grid item xs={8}>\n                  <div>\n                    <label component=\"legend\">\n                      האם סבלת ממחלה עם חום מעל 38° ביומיים האחרונים ?\n                    </label>\n                  </div>\n                </Grid>\n                <Grid item xs={4}>\n                  <div className={left}>\n                    <List style={{padding: 0}}>\n                      <ListItem style={{paddingRight: 0, padding: 0}}>\n                        <FormControlLabel\n                          className={radioBox}\n                          style={{\n                            backgroundColor: q1 === true ? '#000066' : 'white',\n                            color: q1 == true ? 'white' : 'black',\n                          }}\n                          tabIndex=\"1\"\n                          control={\n                            <Radio\n                              className={radio}\n                              color=\"primary\"\n                              checked={q1 === true}\n                              onChange={() => {\n                                setQ1(true);\n                              }}\n                            />\n                          }\n                          label=\"כן\"\n                          labelPlacement=\"start\"\n                        />\n                        <FormControlLabel\n                          className={radioBox}\n                          style={{\n                            backgroundColor: q1 === false ? '#000066' : 'white',\n                            color: q1 === false ? 'white' : 'black',\n                            marginRight: '1rem',\n                          }}\n                          tabIndex=\"1\"\n                          control={\n                            <Radio\n                              className={radio}\n                              color=\"primary\"\n                              checked={q1 === false}\n                              onChange={() => {\n                                setQ1(false);\n                              }}\n                            />\n                          }\n                          label=\"לא\"\n                          labelPlacement=\"start\"\n                        />\n                      </ListItem>\n                    </List>\n                  </div>\n                </Grid>\n                <Grid item xs={8}>\n                  <label component=\"legend\">\n                    האם ידועה אלרגיה לתרופה, חיסון או מזון ?\n                  </label>\n                </Grid>\n                <Grid item xs={4}>\n                  <div className={left}>\n                    <List style={{padding: 0}}>\n                      <ListItem style={{paddingRight: 0, padding: 0}}>\n                        <FormControlLabel\n                          className={radioBox}\n                          style={{\n                            backgroundColor: q2 === true ? '#000066' : 'white',\n                            color: q2 === true ? 'white' : 'black',\n                          }}\n                          tabIndex=\"1\"\n                          control={\n                            <Radio\n                              className={radio}\n                              color=\"primary\"\n                              checked={q2 === true}\n                              onChange={() => {\n                                setQ2(true);\n                              }}\n                            />\n                          }\n                          label=\"כן\"\n                          labelPlacement=\"start\"\n                        />\n                        <FormControlLabel\n                          className={radioBox}\n                          style={{\n                            backgroundColor: q2 === false ? '#000066' : 'white',\n                            color: q2 === false ? 'white' : 'black',\n                            marginRight: '1rem',\n                          }}\n                          tabIndex=\"1\"\n                          control={\n                            <Radio\n                              className={radio}\n                              color=\"primary\"\n                              checked={q2 === false}\n                              onChange={() => {\n                                setQ2(false);\n                              }}\n                            />\n                          }\n                          label=\"לא\"\n                          labelPlacement=\"start\"\n                        />\n                      </ListItem>\n                    </List>\n                  </div>\n                </Grid>\n                <Grid item xs={8}>\n                  <label component=\"legend\">\n                    האם בידך מזרק אפיפן בעקבות תגובה אלרגית משמעותית ?\n                  </label>\n                </Grid>\n                <Grid item xs={4}>\n                  <div className={left}>\n                    <List style={{padding: 0}}>\n                      <ListItem style={{paddingRight: 0, padding: 0}}>\n                        <FormControlLabel\n                          className={radioBox}\n                          style={{\n                            backgroundColor: q3 === true ? '#000066' : 'white',\n                            color: q3 === true ? 'white' : 'black',\n                          }}\n                          tabIndex=\"1\"\n                          control={\n                            <Radio\n                              className={radio}\n                              color=\"primary\"\n                              checked={q3 === true}\n                              onChange={() => {\n                                setQ3(true);\n                              }}\n                            />\n                          }\n                          label=\"כן\"\n                          labelPlacement=\"start\"\n                        />\n                        <FormControlLabel\n                          className={radioBox}\n                          style={{\n                            backgroundColor: q3 === false ? '#000066' : 'white',\n                            color: q3 === false ? 'white' : 'black',\n                            marginRight: '1rem',\n                          }}\n                          tabIndex=\"1\"\n                          control={\n                            <Radio\n                              className={radio}\n                              color=\"primary\"\n                              checked={q3 === false}\n                              onChange={() => {\n                                setQ3(false);\n                              }}\n                            />\n                          }\n                          label=\"לא\"\n                          labelPlacement=\"start\"\n                        />\n                      </ListItem>\n                    </List>\n                  </div>\n                </Grid>\n                <Grid item xs={12}>\n                  <label>\n                    האם פותחה בעבר תגובה אלרגית חמורה לאחר מנת החיסון הראשונה\n                    לנגיף הקורונה ?\n                  </label>\n                </Grid>\n                <Grid item xs={12}>\n                  <div className={left}>\n                    <List style={{padding: 0}}>\n                      <ListItem style={{paddingRight: 0, padding: 0}}>\n                        <FormControlLabel\n                          className={radioBox}\n                          style={{\n                            backgroundColor: q4 === 'yes' ? '#000066' : 'white',\n                            color: q4 === 'yes' ? 'white' : 'black',\n                          }}\n                          tabIndex=\"1\"\n                          control={\n                            <Radio\n                              className={radio}\n                              color=\"primary\"\n                              checked={q4 === 'yes'}\n                              onChange={() => {\n                                setQ4('yes');\n                              }}\n                            />\n                          }\n                          label=\"כן\"\n                          labelPlacement=\"start\"\n                        />\n                        <FormControlLabel\n                          className={radioBox}\n                          style={{\n                            backgroundColor: q4 === 'no' ? '#000066' : 'white',\n                            color: q4 === 'no' ? 'white' : 'black',\n                            marginRight: '1rem',\n                          }}\n                          tabIndex=\"1\"\n                          control={\n                            <Radio\n                              className={radio}\n                              color=\"primary\"\n                              checked={q4 === 'no'}\n                              onChange={() => {\n                                setQ4('no');\n                              }}\n                            />\n                          }\n                          label=\"לא\"\n                          labelPlacement=\"start\"\n                        />\n                        <FormControlLabel\n                          className={radioBox}\n                          style={{\n                            backgroundColor:\n                              q4 === 'first' ? '#000066' : 'white',\n                            color: q4 === 'first' ? 'white' : 'black',\n                            marginRight: '1rem',\n                          }}\n                          tabIndex=\"1\"\n                          control={\n                            <Radio\n                              className={radio}\n                              color=\"primary\"\n                              checked={q4 === 'first'}\n                              onChange={() => {\n                                setQ4('first');\n                              }}\n                            />\n                          }\n                          label=\"חיסון קורונה ראשון\"\n                          labelPlacement=\"start\"\n                        />\n                      </ListItem>\n                    </List>\n                  </div>\n                </Grid>\n                <Grid item xs={12}>\n                  <label className={bold}>סיכום התשאול</label>\n                </Grid>\n                <Grid item xs={12}>\n                  <div className={left}>\n                    <List style={{padding: 0}}>\n                      <ListItem style={{paddingRight: 0, padding: 0}}>\n                        <FormControlLabel\n                          className={radioBox}\n                          style={{\n                            backgroundColor: q5 === true ? '#000066' : 'white',\n                            color: q5 === true ? 'white' : 'black',\n                          }}\n                          tabIndex=\"1\"\n                          control={\n                            <Radio\n                              className={radio}\n                              color=\"primary\"\n                              checked={q5 === true}\n                              onChange={() => {\n                                setQ5(true);\n                              }}\n                            />\n                          }\n                          label=\"יכול להתחסן ✔️\"\n                          labelPlacement=\"start\"\n                        />\n                        <FormControlLabel\n                          className={radioBox}\n                          style={{\n                            backgroundColor: q5 === false ? '#000066' : 'white',\n                            color: q5 === false ? 'white' : 'black',\n                            marginRight: '1rem',\n                          }}\n                          tabIndex=\"1\"\n                          control={\n                            <Radio\n                              className={radio}\n                              color=\"primary\"\n                              checked={q5 === false}\n                              onChange={() => {\n                                setQ5(false);\n                              }}\n                            />\n                          }\n                          label=\"לא יכול להתחסן ❌\"\n                          labelPlacement=\"start\"\n                        />\n                      </ListItem>\n                    </List>\n                  </div>\n                </Grid>\n                <Grid item xs={12} style={{paddingLeft: 0}}>\n                  <div className={left}>\n                    <CoolButton\n                      disabled={true}\n                      text=\"שלח\"\n                      action={() => {\n                        //      if (isValid()) {\n                        getResultDeclareSoldierVaccinable();\n                        setOpen(true);\n                        setTimeout(() => setOpen(false), TIMEOUT);\n                        //    }\n                      }}\n                    />\n                  </div>\n                </Grid>\n              </Grid>\n            </div>\n          </List>\n        </FormControl>\n      </div>\n\n      <SimpleDialog open={open} />\n    </div>\n  );\n};\n\nexport default CanGetVaccinated;\n","C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\components\\NavBar.js",[],"C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\context\\users-context.js",[],"C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\context\\stations-context.js",[],"C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\components\\VaccineConfirmation.js",["102","103","104","105","106","107"],"C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\components\\ArrivalToCprStationConfirmation.js",["108","109","110","111","112","113","114","115","116"],"import React, {useEffect, useState} from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport axios from 'axios';\nimport {\n  Button,\n  FormControlLabel,\n  Grid,\n  List,\n  ListItem,\n  Radio,\n  RadioGroup,\n  TextField,\n  createStyles,\n} from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    button: {\n      backgroundColor: 'white',\n      color: 'black',\n      cursor: 'default',\n      border: 'solid 1px lightGray',\n      'border-radius': '5px',\n      display: 'block',\n      padding: '7px',\n      textAlign: 'center',\n      outline: '0',\n      boxShadow: '0 0 0 0',\n    },\n    radio: {\n      display: 'none',\n    },\n    radioBox: {\n      backgroundColor: '#333460',\n      cursor: 'default',\n      border: 'solid 1px lightGray',\n      'border-radius': '5px',\n      display: 'block',\n      padding: '7px',\n      textAlign: 'center',\n      outline: '0',\n    },\n  })\n);\n\nfunction ArrivalToCprStationConfirmation() {\n  const {button} = useStyles();\n  const {radio} = useStyles();\n  const {radioBox} = useStyles();\n  const [soldierId, setId] = React.useState('');\n  const [wasArrived, setWasArrived] = React.useState('');\n  const [isRadiosEnabled, setIsRadiosEnabled] = React.useState(true);\n  const [isBusyWithSoldier, setIsBusyWithSoldier] = React.useState(false);\n  let url = window.location.href;\n  let stationId = url.substring(url.lastIndexOf('/') + 1);\n\n  React.useEffect(() => {\n    setInterval(() => {\n      if (isBusyWithSoldier === false) {\n        axios\n          .get(\n            'http://corona-server.azurewebsites.net/callNextSoldierToCprStation'\n          )\n          .then((res) => {\n            setId(res.data);\n            setIsBusyWithSoldier(true);\n          })\n          .catch((rej) => {\n            setId('אין מתחסן קרוב בינתיים');\n          });\n      }\n    }, 1000);\n  }, []);\n\n  React.useEffect(() => {\n    if (wasArrived !== '') giveArrivedResult();\n  }, [wasArrived]);\n\n  async function getArrivedResult() {\n    const params = new URLSearchParams();\n    let soldierIdInteger = parseInt(soldierId);\n    let soldierIdWithoutZeroPrefix = soldierIdInteger.toString();\n    let soldierJson = {\n      soldierId: soldierIdWithoutZeroPrefix,\n      wasArrivedToCprStation: wasArrived,\n    };\n    params.append('0', JSON.stringify(soldierJson));\n    debugger;\n    return await axios.put(\n      `http://corona-server.azurewebsites.net/setWasArrivedToCprStation`,\n      params\n    );\n  }\n\n  function isInputValid() {\n    return (\n      (soldierId.length == 7 || soldierId.length == 8) && wasArrived !== ''\n    );\n  }\n\n  function giveArrivedResult() {\n    getArrivedResult()\n      .then((res) => {\n        alert(res.data.data);\n      })\n      .catch((rej) => {\n        alert(JSON.stringify(rej));\n      });\n  }\n\n  async function callNext() {\n    const paramsCallNext = new URLSearchParams();\n    let stationIdIntegerMinus1 = parseInt(stationId) - 1;\n    let stationIdMinus1 = stationIdIntegerMinus1.toString();\n    let cprStationJson = {\n      cprStationId: stationIdMinus1,\n    };\n    paramsCallNext.append('0', JSON.stringify(cprStationJson));\n    debugger;\n    return await axios.put(\n      `http://corona-server.azurewebsites.net/callNextSoldierToCprStation`,\n      paramsCallNext\n    );\n  }\n\n  function isCanCallNextSoldier() {\n    return wasArrived !== '' && isBusyWithSoldier === true;\n  }\n\n  function callNextSoldier() {\n    callNext()\n      .then((res) => {\n        alert(res.data.data);\n      })\n      .catch((rej) => {\n        alert(JSON.stringify(rej));\n      });\n  }\n\n  return (\n    <Grid\n      container\n      spacing={0}\n      direction=\"column\"\n      alignItems=\"center\"\n      justify=\"center\"\n      style={{minHeight: '50vh'}}>\n      <FormControl>\n        <List>\n          <ListItem\n            style={{\n              display: 'flex',\n              'justify-content': 'center',\n              'align-items': 'center',\n              'font-size': '18px',\n              paddingTop: '50px',\n            }}>\n            המתחסן הקרוב\n          </ListItem>\n          <ListItem\n            style={{\n              display: 'flex',\n              'justify-content': 'center',\n              'align-items': 'center',\n              padding: '0',\n            }}></ListItem>\n          <ListItem\n            style={{\n              display: 'flex',\n              'justify-content': 'center',\n              'align-items': 'center',\n            }}>\n            <TextField\n              style={{\n                'text-align': 'center',\n              }}\n              disabled=\"true\"\n              variant=\"outlined\"\n              value={soldierId}\n              //onChange={(e) => setId(e?.target?.value)}\n            />\n          </ListItem>\n          <ListItem\n            style={{\n              display: 'flex',\n              'justify-content': 'center',\n              'align-items': 'center',\n              'font-size': '18px',\n              paddingTop: '80px',\n            }}>\n            האם המתחסן הגיע? (לא לשכוח לבצע אימות באמצעות חוגר){' '}\n          </ListItem>\n          <ListItem\n            style={{\n              display: 'flex',\n              'justify-content': 'center',\n              'align-items': 'center',\n            }}>\n            <RadioGroup\n              row\n              aria-label=\"position\"\n              name=\"position\"\n              defaultValue=\"top\">\n              <FormControlLabel\n                className={radioBox}\n                style={{\n                  backgroundColor: wasArrived === false ? '#333460' : 'white',\n                  color: wasArrived === false ? 'white' : 'black',\n                }}\n                tabindex=\"2\"\n                control={\n                  <Radio\n                    className={radio}\n                    disabled={!isCanCallNextSoldier()}\n                    color=\"primary\"\n                    checked={wasArrived === false}\n                    onChange={() => {\n                      setWasArrived(false);\n                      setIsRadiosEnabled(false);\n                      // giveArrivedResult()\n                    }}\n                  />\n                }\n                label=\"לא, דלג להבא בתור\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                className={radioBox}\n                style={{\n                  backgroundColor: wasArrived === true ? '#333460' : 'white',\n                  color: wasArrived === true ? 'white' : 'black',\n                }}\n                tabindex=\"1\"\n                control={\n                  <Radio\n                    className={radio}\n                    disabled={!isCanCallNextSoldier()}\n                    color=\"primary\"\n                    checked={wasArrived === true}\n                    onChange={() => {\n                      setWasArrived(true);\n                      setIsRadiosEnabled(false);\n                    }}\n                  />\n                }\n                label=\"כן, המתחסן הוזן במערכת\"\n                labelPlacement=\"start\"\n              />\n            </RadioGroup>\n          </ListItem>\n          <ListItem\n            style={{\n              display: 'flex',\n              'justify-content': 'center',\n              'align-items': 'center',\n              paddingTop: '80px',\n            }}>\n            <Button\n              variant=\"contained\"\n              disabled={!isCanCallNextSoldier()}\n              className={button}\n              color=\"primary\"\n              onClick={() => {\n                setIsBusyWithSoldier(false);\n              }}>\n              קריאה להבא בתור\n            </Button>\n          </ListItem>\n        </List>\n      </FormControl>\n    </Grid>\n  );\n}\n\nexport default ArrivalToCprStationConfirmation;\n","C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\components\\WaitingRoomLayout.js",["117"],"import React from 'react';\nimport {Grid, makeStyles} from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Header from './Header';\n\nconst USERS_PER_PAGE = 15;\nconst PAGE_INTERVAL_TIMEOUT = 3000;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    margin: '0 auto',\n  },\n  border: {\n    borderLeft: 'rgba(0, 0, 0, 0.12) 2px solid',\n  },\n  pagination: {\n    justifyContent: 'center',\n  },\n}));\n\nconst WaitingRoomLayout = ({\n  users,\n  stations,\n  UserComponent,\n  StationComponent,\n  waitingRoomHeader,\n  stationsHeader,\n}) => {\n  const [page, setPage] = React.useState(1);\n  const {root, pagination, border} = useStyles();\n\n  React.useEffect(() => {\n    const intervalId = setInterval(() => {\n      setPage((p) => {\n        const pagesCount = Math.ceil(users.length / USERS_PER_PAGE);\n        return p < pagesCount ? p + 1 : 1;\n      });\n    }, PAGE_INTERVAL_TIMEOUT);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  return (\n    <Grid container spacing={4}>\n      <Grid item xs={8}>\n        <Header text={waitingRoomHeader} />\n\n        <Box height=\"70vh\">\n          <Grid className={root} container direction=\"column\" spacing={1}>\n            {users\n              .slice((page - 1) * USERS_PER_PAGE, page * USERS_PER_PAGE)\n              .map((user) => (\n                <Grid item key={user.id}>\n                  <UserComponent {...user} />\n                </Grid>\n              ))}\n          </Grid>\n\n          <Pagination\n            classes={{ul: pagination}}\n            count={Math.ceil(users.length / USERS_PER_PAGE)}\n            variant=\"outlined\"\n            page={page}\n            onChange={(e, p) => setPage(p)}\n          />\n        </Box>\n      </Grid>\n\n      <Grid item xs={4} className={border}>\n        <Header text={stationsHeader} />\n\n        <Box height=\"70vh\">\n          <Grid\n            container\n            className={root}\n            direction=\"column\"\n            spacing={1}\n            xs={6}>\n            {stations.map((station) => (\n              <Grid item key={station.id}>\n                <StationComponent {...station} />\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default WaitingRoomLayout;\n","C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\components\\VaccineWaitingRoom.js",[],"C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\components\\CPRWaitingRoom.js",[],"C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\components\\FooterBar.js",[],"C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\components\\Home.js",[],"C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\utils\\api.js",[],"C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\components\\Header.js",[],"C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\components\\Station.js",[],"C:\\Users\\Tzafrir\\Desktop\\covid-19\\new\\queue-rona\\src\\components\\IsSoldierArrived.js",["118","119","120","121","122","123","124"],"import React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport axios from 'axios';\nimport {\n  Button,\n  FormControlLabel,\n  Grid,\n  List,\n  ListItem,\n  Radio,\n  RadioGroup,\n  TextField,\n  createStyles,\n} from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport {useHistory} from 'react-router-dom';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    button: {\n      backgroundColor: 'white',\n      color: 'black',\n      cursor: 'default',\n      border: 'solid 1px lightGray',\n      'border-radius': '5px',\n      display: 'block',\n      padding: '7px',\n      textAlign: 'center',\n      outline: '0',\n      boxShadow: '0 0 0 0',\n    },\n    radio: {\n      display: 'none',\n    },\n    radioBox: {\n      backgroundColor: '#333460',\n      cursor: 'default',\n      border: 'solid 1px lightGray',\n      'border-radius': '5px',\n      display: 'block',\n      padding: '7px',\n      textAlign: 'center',\n      outline: '0',\n    },\n  })\n);\n\nfunction IsSoldierArrived() {\n  const {button} = useStyles();\n  const {radio} = useStyles();\n  const {radioBox} = useStyles();\n  const [soldierId, setId] = React.useState('');\n\n  const [wasArrived, setWasArrived] = React.useState('');\n  const [isRadiosEnabled, setIsRadiosEnabled] = React.useState(true);\n  const [isBusyWithSoldier, setIsBusyWithSoldier] = React.useState(false);\n  const history = useHistory();\n  const handleOnClick = (url) => {\n    history.push(`${url}/${soldierId}`);\n  };\n  let url = window.location.href;\n  let stationId = url.substring(url.lastIndexOf('/') + 1);\n\n  const [counter, setCounter] = React.useState(0);\n  React.useEffect(() => {\n    const interval = setTimeout(() => {\n      if (isBusyWithSoldier === false) {\n        axios\n          .post(\n            'https://corona-server.azurewebsites.net/dedicateSoldierToStage',\n            {stageId: 2}\n          )\n          .then((res) => {\n            setId(res.data);\n            setIsBusyWithSoldier(true);\n          })\n          .catch((rej) => {\n            setId('אין מתחסן קרוב בינתיים');\n          });\n      }\n      setCounter(counter + 1);\n    });\n  }, []);\n\n  function isInputValid() {\n    return (\n      (soldierId.length == 7 || soldierId.length == 8) && wasArrived !== ''\n    );\n  }\n\n  async function callNext() {\n    const paramsCallNext = new URLSearchParams();\n    let stationIdIntegerMinus1 = parseInt(stationId) - 1;\n    let stationIdMinus1 = stationIdIntegerMinus1.toString();\n    let cprStationJson = {\n      cprStationId: stationIdMinus1,\n    };\n    paramsCallNext.append('0', JSON.stringify(cprStationJson));\n    debugger;\n    return await axios.put(\n      `http://corona-server.azurewebsites.net/callNextSoldierToCprStation`,\n      paramsCallNext\n    );\n  }\n\n  function isCanCallNextSoldier() {\n    return wasArrived !== '' && isBusyWithSoldier === true;\n  }\n\n  function callNextSoldier() {\n    callNext()\n      .then((res) => {\n        alert(res.data.data);\n      })\n      .catch((rej) => {\n        alert(JSON.stringify(rej));\n      });\n  }\n\n  return (\n    <Grid\n      container\n      spacing={0}\n      direction=\"column\"\n      alignItems=\"center\"\n      justify=\"center\"\n      style={{minHeight: '50vh'}}>\n      <FormControl>\n        <List>\n          <ListItem\n            style={{\n              display: 'flex',\n              'justify-content': 'center',\n              'align-items': 'center',\n              'font-size': '18px',\n              paddingTop: '50px',\n            }}>\n            המתחסן הקרוב\n          </ListItem>\n          <ListItem\n            style={{\n              display: 'flex',\n              'justify-content': 'center',\n              'align-items': 'center',\n              padding: '0',\n            }}></ListItem>\n          <ListItem\n            style={{\n              display: 'flex',\n              'justify-content': 'center',\n              'align-items': 'center',\n            }}>\n            <TextField\n              style={{\n                'text-align': 'center',\n              }}\n              disabled=\"true\"\n              variant=\"outlined\"\n              value={soldierId}\n              //onChange={(e) => setId(e?.target?.value)}\n            />\n          </ListItem>\n          <ListItem\n            style={{\n              display: 'flex',\n              'justify-content': 'center',\n              'align-items': 'center',\n              'font-size': '18px',\n              paddingTop: '80px',\n            }}>\n            האם המתחסן הגיע? (לא לשכוח לבצע אימות באמצעות חוגר){' '}\n          </ListItem>\n          <ListItem\n            style={{\n              display: 'flex',\n              'justify-content': 'center',\n              'align-items': 'center',\n            }}>\n            <RadioGroup\n              row\n              aria-label=\"position\"\n              name=\"position\"\n              defaultValue=\"top\">\n              <FormControlLabel\n                className={radioBox}\n                style={{\n                  backgroundColor: wasArrived === false ? '#333460' : 'white',\n                  color: wasArrived === false ? 'white' : 'black',\n                }}\n                tabindex=\"2\"\n                control={\n                  <Radio\n                    className={radio}\n                    // disabled={!isRadiosEnabled}\n                    color=\"primary\"\n                    checked={wasArrived === false}\n                    onChange={() => {\n                      setWasArrived(false);\n                      setIsRadiosEnabled(false);\n                      // giveArrivedResult()\n                    }}\n                  />\n                }\n                label=\"לא, דלג להבא בתור\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                className={radioBox}\n                style={{\n                  backgroundColor: wasArrived === true ? '#333460' : 'white',\n                  color: wasArrived === true ? 'white' : 'black',\n                }}\n                tabindex=\"1\"\n                control={\n                  <Radio\n                    className={radio}\n                    // disabled={!isRadiosEnabled}\n                    color=\"primary\"\n                    checked={wasArrived === true}\n                    onChange={() => {\n                      setWasArrived(true);\n                      setIsRadiosEnabled(false);\n                    }}\n                  />\n                }\n                label=\"כן, המתחסן הגיע\"\n                labelPlacement=\"start\"\n              />\n            </RadioGroup>\n          </ListItem>\n          <ListItem\n            style={{\n              display: 'flex',\n              'justify-content': 'center',\n              'align-items': 'center',\n              paddingTop: '80px',\n            }}>\n            <Button\n              variant=\"contained\"\n              disabled={!isCanCallNextSoldier()}\n              className={button}\n              color=\"primary\"\n              onClick={() => {\n                handleOnClick('/CanGetVaccinated');\n              }}>\n              המשך\n            </Button>\n          </ListItem>\n        </List>\n      </FormControl>\n    </Grid>\n  );\n}\n\nexport default IsSoldierArrived;\n",{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":1,"column":16,"nodeType":"131","messageId":"132","endLine":1,"endColumn":24},{"ruleId":"129","severity":1,"message":"133","line":71,"column":10,"nodeType":"131","messageId":"132","endLine":71,"endColumn":23},{"ruleId":"129","severity":1,"message":"134","line":72,"column":18,"nodeType":"131","messageId":"132","endLine":72,"endColumn":22},{"ruleId":"135","severity":1,"message":"136","line":153,"column":7,"nodeType":"137","messageId":"138","endLine":153,"endColumn":13},{"ruleId":"135","severity":1,"message":"139","line":155,"column":7,"nodeType":"137","messageId":"138","endLine":155,"endColumn":13},{"ruleId":"129","severity":1,"message":"140","line":173,"column":10,"nodeType":"131","messageId":"132","endLine":173,"endColumn":15},{"ruleId":"141","severity":1,"message":"142","line":276,"column":39,"nodeType":"143","messageId":"138","endLine":276,"endColumn":41},{"ruleId":"135","severity":1,"message":"136","line":100,"column":7,"nodeType":"137","messageId":"138","endLine":100,"endColumn":13},{"ruleId":"135","severity":1,"message":"139","line":102,"column":7,"nodeType":"137","messageId":"138","endLine":102,"endColumn":13},{"ruleId":"144","severity":1,"message":"145","line":130,"column":6,"nodeType":"146","endLine":130,"endColumn":8,"suggestions":"147"},{"ruleId":"129","severity":1,"message":"148","line":165,"column":12,"nodeType":"131","messageId":"132","endLine":165,"endColumn":19},{"ruleId":"141","severity":1,"message":"142","line":211,"column":39,"nodeType":"143","messageId":"138","endLine":211,"endColumn":41},{"ruleId":"129","severity":1,"message":"149","line":54,"column":18,"nodeType":"131","messageId":"132","endLine":54,"endColumn":27},{"ruleId":"129","severity":1,"message":"150","line":69,"column":12,"nodeType":"131","messageId":"132","endLine":69,"endColumn":24},{"ruleId":"129","severity":1,"message":"151","line":75,"column":12,"nodeType":"131","messageId":"132","endLine":75,"endColumn":27},{"ruleId":"152","severity":2,"message":"153","line":76,"column":5,"nodeType":"131","messageId":"154","endLine":76,"endColumn":13},{"ruleId":"152","severity":2,"message":"155","line":210,"column":26,"nodeType":"131","messageId":"154","endLine":210,"endColumn":46},{"ruleId":"152","severity":2,"message":"156","line":214,"column":17,"nodeType":"131","messageId":"154","endLine":214,"endColumn":30},{"ruleId":"129","severity":1,"message":"157","line":1,"column":16,"nodeType":"131","messageId":"132","endLine":1,"endColumn":25},{"ruleId":"129","severity":1,"message":"130","line":1,"column":27,"nodeType":"131","messageId":"132","endLine":1,"endColumn":35},{"ruleId":"129","severity":1,"message":"158","line":53,"column":10,"nodeType":"131","messageId":"132","endLine":53,"endColumn":25},{"ruleId":"144","severity":1,"message":"159","line":74,"column":6,"nodeType":"146","endLine":74,"endColumn":8,"suggestions":"160"},{"ruleId":"144","severity":1,"message":"161","line":78,"column":6,"nodeType":"146","endLine":78,"endColumn":18,"suggestions":"162"},{"ruleId":"129","severity":1,"message":"150","line":96,"column":12,"nodeType":"131","messageId":"132","endLine":96,"endColumn":24},{"ruleId":"141","severity":1,"message":"142","line":98,"column":25,"nodeType":"143","messageId":"138","endLine":98,"endColumn":27},{"ruleId":"141","severity":1,"message":"142","line":98,"column":50,"nodeType":"143","messageId":"138","endLine":98,"endColumn":52},{"ruleId":"129","severity":1,"message":"151","line":131,"column":12,"nodeType":"131","messageId":"132","endLine":131,"endColumn":27},{"ruleId":"144","severity":1,"message":"163","line":45,"column":6,"nodeType":"146","endLine":45,"endColumn":8,"suggestions":"164"},{"ruleId":"129","severity":1,"message":"158","line":55,"column":10,"nodeType":"131","messageId":"132","endLine":55,"endColumn":25},{"ruleId":"129","severity":1,"message":"165","line":66,"column":11,"nodeType":"131","messageId":"132","endLine":66,"endColumn":19},{"ruleId":"144","severity":1,"message":"166","line":83,"column":6,"nodeType":"146","endLine":83,"endColumn":8,"suggestions":"167"},{"ruleId":"129","severity":1,"message":"150","line":85,"column":12,"nodeType":"131","messageId":"132","endLine":85,"endColumn":24},{"ruleId":"141","severity":1,"message":"142","line":87,"column":25,"nodeType":"143","messageId":"138","endLine":87,"endColumn":27},{"ruleId":"141","severity":1,"message":"142","line":87,"column":50,"nodeType":"143","messageId":"138","endLine":87,"endColumn":52},{"ruleId":"129","severity":1,"message":"151","line":110,"column":12,"nodeType":"131","messageId":"132","endLine":110,"endColumn":27},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'SimpleDialog2' is defined but never used.","'text' is assigned a value but never used.","no-dupe-keys","Duplicate key 'border'.","ObjectExpression","unexpected","Duplicate key 'cursor'.","'open2' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSoldierInfo'. Either include it or remove the dependency array.","ArrayExpression",["170"],"'isValid' is defined but never used.","'getResult' is defined but never used.","'isInputValid' is defined but never used.","'callNextSoldier' is defined but never used.","no-undef","'callNext' is not defined.","undef","'isCanCallNextSoldier' is not defined.","'handleOnClick' is not defined.","'useEffect' is defined but never used.","'isRadiosEnabled' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'isBusyWithSoldier'. Either include it or remove the dependency array.",["171"],"React Hook React.useEffect has a missing dependency: 'giveArrivedResult'. Either include it or remove the dependency array.",["172"],"React Hook React.useEffect has a missing dependency: 'users.length'. Either include it or remove the dependency array. If 'setPage' needs the current value of 'users.length', you can also switch to useReducer instead of useState and read 'users.length' in the reducer.",["173"],"'interval' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'counter' and 'isBusyWithSoldier'. Either include them or remove the dependency array. You can also do a functional update 'setCounter(c => ...)' if you only need 'counter' in the 'setCounter' call.",["174"],"no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},"Update the dependencies array to be: [getSoldierInfo]",{"range":"185","text":"186"},"Update the dependencies array to be: [isBusyWithSoldier]",{"range":"187","text":"188"},"Update the dependencies array to be: [giveArrivedResult, wasArrived]",{"range":"189","text":"190"},"Update the dependencies array to be: [users.length]",{"range":"191","text":"192"},"Update the dependencies array to be: [counter, isBusyWithSoldier]",{"range":"193","text":"194"},[2785,2787],"[getSoldierInfo]",[1903,1905],"[isBusyWithSoldier]",[1988,2000],"[giveArrivedResult, wasArrived]",[1033,1035],"[users.length]",[2139,2141],"[counter, isBusyWithSoldier]"]