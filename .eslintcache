[{"C:\\temp\\corona virussssssssssss\\queue-rona\\src\\index.js":"1","C:\\temp\\corona virussssssssssss\\queue-rona\\src\\reportWebVitals.js":"2","C:\\temp\\corona virussssssssssss\\queue-rona\\src\\App.js":"3","C:\\temp\\corona virussssssssssss\\queue-rona\\src\\theme\\mui-theme.js":"4","C:\\temp\\corona virussssssssssss\\queue-rona\\src\\components\\AddAppointment.js":"5","C:\\temp\\corona virussssssssssss\\queue-rona\\src\\components\\NavBar.js":"6","C:\\temp\\corona virussssssssssss\\queue-rona\\src\\components\\IsSoldierArrived.js":"7","C:\\temp\\corona virussssssssssss\\queue-rona\\src\\components\\VaccineConfirmation.js":"8","C:\\temp\\corona virussssssssssss\\queue-rona\\src\\context\\users-context.js":"9","C:\\temp\\corona virussssssssssss\\queue-rona\\src\\context\\stations-context.js":"10","C:\\temp\\corona virussssssssssss\\queue-rona\\src\\utils\\api.js":"11","C:\\temp\\corona virussssssssssss\\queue-rona\\src\\components\\WaitingRoomLayout.js":"12","C:\\temp\\corona virussssssssssss\\queue-rona\\src\\components\\CPRWaitingRoom.js":"13","C:\\temp\\corona virussssssssssss\\queue-rona\\src\\components\\VaccineWaitingRoom.js":"14","C:\\temp\\corona virussssssssssss\\queue-rona\\src\\components\\Header.js":"15","C:\\temp\\corona virussssssssssss\\queue-rona\\src\\components\\Station.js":"16","C:\\temp\\corona virussssssssssss\\queue-rona\\src\\components\\Home.js":"17","C:\\temp\\corona virussssssssssss\\queue-rona\\src\\components\\FooterBar.js":"18"},{"size":1453,"mtime":1609023247307,"results":"19","hashOfConfig":"20"},{"size":375,"mtime":1608887231418,"results":"21","hashOfConfig":"20"},{"size":1250,"mtime":1609034145313,"results":"22","hashOfConfig":"20"},{"size":232,"mtime":1608887231421,"results":"23","hashOfConfig":"20"},{"size":18430,"mtime":1609027570274,"results":"24","hashOfConfig":"20"},{"size":1460,"mtime":1609027570277,"results":"25","hashOfConfig":"20"},{"size":6346,"mtime":1609023247279,"results":"26","hashOfConfig":"20"},{"size":6197,"mtime":1609023247298,"results":"27","hashOfConfig":"20"},{"size":933,"mtime":1609023247305,"results":"28","hashOfConfig":"20"},{"size":974,"mtime":1609023247304,"results":"29","hashOfConfig":"20"},{"size":1314,"mtime":1609023247310,"results":"30","hashOfConfig":"20"},{"size":2417,"mtime":1609023247301,"results":"31","hashOfConfig":"20"},{"size":1037,"mtime":1609023247275,"results":"32","hashOfConfig":"20"},{"size":929,"mtime":1609023247300,"results":"33","hashOfConfig":"20"},{"size":269,"mtime":1609023247276,"results":"34","hashOfConfig":"20"},{"size":785,"mtime":1609023247290,"results":"35","hashOfConfig":"20"},{"size":4473,"mtime":1609031042839,"results":"36","hashOfConfig":"20"},{"size":1013,"mtime":1609034191656,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1f0xteu",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\temp\\corona virussssssssssss\\queue-rona\\src\\index.js",[],["78","79"],"C:\\temp\\corona virussssssssssss\\queue-rona\\src\\reportWebVitals.js",[],"C:\\temp\\corona virussssssssssss\\queue-rona\\src\\App.js",["80","81"],"C:\\temp\\corona virussssssssssss\\queue-rona\\src\\theme\\mui-theme.js",[],"C:\\temp\\corona virussssssssssss\\queue-rona\\src\\components\\AddAppointment.js",["82","83","84","85","86","87","88"],"import React, {useState} from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  Button,\r\n  FormControlLabel,\r\n  List,\r\n  ListItem,\r\n  Radio,\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  createStyles,\r\n} from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst TIMEOUT = 6000;\r\n\r\nfunction SimpleDialog({open, soldierId, setOpen, give, setOpen2}) {\r\n  const {center, text} = useStyles();\r\n\r\n  return (\r\n    <Dialog open={open} style={{margin: '3rem'}}>\r\n      <DialogTitle className={center}>\r\n        <p>רגע לפני כניסה לאזור ההמתנה באולם,</p>\r\n        <p>וודאו כי המספר האישי שהוזן תקין</p>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Typography variant=\"body1\">\r\n          <div style={{marginBottom: '3rem'}}>\r\n            <TextField\r\n              size={'small'}\r\n              className={center + ' ' + text}\r\n              variant=\"outlined\"\r\n              value={soldierId}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n          </div>\r\n          <List>\r\n            <ListItem>\r\n              <div style={{marginLeft: '2rem'}}>\r\n                <CoolButton\r\n                  text=\"לא, חזרה לעריכה\"\r\n                  action={() => {\r\n                    setOpen(false);\r\n                  }}\r\n                />\r\n              </div>\r\n              <CoolButton\r\n                text=\"המספר תקין, תודה\"\r\n                action={() => {\r\n                  give();\r\n                  setOpen(false);\r\n                  setOpen2(true);\r\n                  setTimeout(() => setOpen2(false), TIMEOUT);\r\n                }}\r\n              />\r\n            </ListItem>\r\n          </List>\r\n        </Typography>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nfunction SimpleDialog2({open}) {\r\n  const {center, text} = useStyles();\r\n\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle className={center}>\r\n        <p>זה נראה קרוב מתמיד,</p>\r\n        <p>אבל אנחנו עדיין מוגבלים בכמות האנשים באולם בעקבות ההנחיות</p>\r\n        <p>המתינו מספר דקות ונאשר את כניסתכם</p>\r\n      </DialogTitle>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nconst CoolButton = ({text, action, isDisabled}) => {\r\n  const {button} = useStyles();\r\n  return (\r\n    <Button\r\n      className={button}\r\n      style={{backgroundColor: 'white'}}\r\n      variant=\"outlined\"\r\n      color=\"default\"\r\n      disabled={isDisabled}\r\n      onClick={() => {\r\n        action();\r\n      }}>\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    button: {\r\n      width: 'fit-content',\r\n    },\r\n    background: {\r\n      'background-color': '#EEEEEE',\r\n    },\r\n    center: {\r\n      display: 'flex',\r\n      'justify-content': 'center',\r\n      'align-items': 'center',\r\n      textAlign: 'center',\r\n    },\r\n    bold: {\r\n      'font-weight': 'bold',\r\n    },\r\n    text: {\r\n      '& .MuiInputBase-input': {\r\n        backgroundColor: 'white !important',\r\n        fontSize: '110%',\r\n        textAlign: 'center',\r\n        width: '7rem',\r\n      },\r\n    },\r\n    fullWidth: {\r\n      width: '100%',\r\n    },\r\n    left: {\r\n      float: 'right',\r\n    },\r\n    grid: {\r\n      'text-align': 'left !important',\r\n      width: '50%',\r\n      display: 'inline-block !important',\r\n    },\r\n    radio: {\r\n      display: 'none',\r\n    },\r\n    radioBox: {\r\n      backgroundColor: 'white',\r\n      cursor: 'default',\r\n      border: 'solid 1px lightGray',\r\n      display: 'block',\r\n      paddingRight: '1.5rem',\r\n      paddingTop: '0.1rem',\r\n      paddingBottom: '0.1rem',\r\n      paddingLeft: '1.5rem',\r\n      'border-radius': '5px',\r\n      marginLeft: '0',\r\n      textAlign: 'center',\r\n      border: 'solid 1px lightGray',\r\n      outline: '0',\r\n      cursor: 'pointer',\r\n    },\r\n  })\r\n);\r\n\r\nconst AddAppointment = () => {\r\n  const {\r\n    background,\r\n    center,\r\n    bold,\r\n    fullWidth,\r\n    left,\r\n    grid,\r\n    radioBox,\r\n    radio,\r\n    text,\r\n  } = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [open2, setOpen2] = React.useState(false);\r\n\r\n  const [soldierId, setId] = React.useState('');\r\n  const [q1, setQ1] = React.useState('');\r\n  const [q2, setQ2] = React.useState('');\r\n  const [q3, setQ3] = React.useState('');\r\n  const [q4, setQ4] = React.useState('');\r\n\r\n  async function getResultAddSoldierToSoldierTable() {\r\n    let data = {\r\n      soldierId: soldierId,\r\n      arrivalTime: 123,\r\n      q1: q1,\r\n      q2: q2,\r\n      q3: q3,\r\n      q4: q4,\r\n    };\r\n    return await axios.post(\r\n      'http://corona-server.azurewebsites.net/addSoldierToSoldierTable',\r\n      data,\r\n      {headers: {'Content-Type': 'application/json'}}\r\n    );\r\n  }\r\n\r\n  async function getResultAddSoliderToArrivalQueue() {\r\n    let article = {soldierId: soldierId};\r\n    return await axios.post(\r\n      'http://corona-server.azurewebsites.net/addSoliderToArrivalQueue',\r\n      article,\r\n      {headers: {'Content-Type': 'application/json'}}\r\n    );\r\n  }\r\n\r\n  async function give() {\r\n    await getResultAddSoldierToSoldierTable();\r\n    await getResultAddSoliderToArrivalQueue();\r\n    setId('');\r\n    setQ1('');\r\n    setQ2('');\r\n    setQ3('');\r\n    setQ4('');\r\n  }\r\n\r\n  function isValid() {\r\n    return (\r\n      soldierId.length === 7 && q1 !== '' && q2 !== '' && q3 !== '' && q4 !== ''\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={background}>\r\n        <FormControl>\r\n          <List>\r\n            <ListItem>\r\n              <label\r\n                className={center + ' ' + fullWidth}\r\n                style={{fontSize: '120%'}}>\r\n                הכנס מספר אישי\r\n              </label>\r\n            </ListItem>\r\n            <div className={fullWidth}>\r\n              <TextField\r\n                size={'small'}\r\n                inputProps={{\r\n                  maxLength: 7,\r\n                }}\r\n                error={soldierId.length !== 7}\r\n                className={center + ' ' + text}\r\n                variant=\"outlined\"\r\n                value={soldierId}\r\n                onChange={(e) => setId(e?.target?.value)}\r\n              />\r\n            </div>\r\n            <div className={grid + ' ' + center}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <label className={bold}>אנא ענו על השאלות הבאות</label>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                  <div>\r\n                    <label component=\"legend\">\r\n                      האם סבלת ממחלה עם חום מעל 38° ביומיים האחרונים?\r\n                    </label>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <div className={left}>\r\n                    <List style={{padding: 0}}>\r\n                      <ListItem style={{paddingRight: 0, padding: 0}}>\r\n                        <FormControlLabel\r\n                          className={radioBox}\r\n                          style={{\r\n                            backgroundColor: q1 === true ? '#000066' : 'white',\r\n                            color: q1 == true ? 'white' : 'black',\r\n                          }}\r\n                          tabIndex=\"1\"\r\n                          control={\r\n                            <Radio\r\n                              className={radio}\r\n                              color=\"primary\"\r\n                              checked={q1 === true}\r\n                              onChange={() => {\r\n                                setQ1(true);\r\n                              }}\r\n                            />\r\n                          }\r\n                          label=\"כן\"\r\n                          labelPlacement=\"start\"\r\n                        />\r\n                        <FormControlLabel\r\n                          className={radioBox}\r\n                          style={{\r\n                            backgroundColor: q1 === false ? '#000066' : 'white',\r\n                            color: q1 === false ? 'white' : 'black',\r\n                            marginRight: '1rem',\r\n                          }}\r\n                          tabIndex=\"1\"\r\n                          control={\r\n                            <Radio\r\n                              className={radio}\r\n                              color=\"primary\"\r\n                              checked={q1 === false}\r\n                              onChange={() => {\r\n                                setQ1(false);\r\n                              }}\r\n                            />\r\n                          }\r\n                          label=\"לא\"\r\n                          labelPlacement=\"start\"\r\n                        />\r\n                      </ListItem>\r\n                    </List>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                  <label component=\"legend\">\r\n                    האם ידועה אלרגיה לתרופה, חיסון או מזון?\r\n                  </label>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <div className={left}>\r\n                    <List style={{padding: 0}}>\r\n                      <ListItem style={{paddingRight: 0, padding: 0}}>\r\n                        <FormControlLabel\r\n                          className={radioBox}\r\n                          style={{\r\n                            backgroundColor: q2 === true ? '#000066' : 'white',\r\n                            color: q2 === true ? 'white' : 'black',\r\n                          }}\r\n                          tabIndex=\"1\"\r\n                          control={\r\n                            <Radio\r\n                              className={radio}\r\n                              color=\"primary\"\r\n                              checked={q2 === true}\r\n                              onChange={() => {\r\n                                setQ2(true);\r\n                              }}\r\n                            />\r\n                          }\r\n                          label=\"כן\"\r\n                          labelPlacement=\"start\"\r\n                        />\r\n                        <FormControlLabel\r\n                          className={radioBox}\r\n                          style={{\r\n                            backgroundColor: q2 === false ? '#000066' : 'white',\r\n                            color: q2 === false ? 'white' : 'black',\r\n                            marginRight: '1rem',\r\n                          }}\r\n                          tabIndex=\"1\"\r\n                          control={\r\n                            <Radio\r\n                              className={radio}\r\n                              color=\"primary\"\r\n                              checked={q2 === false}\r\n                              onChange={() => {\r\n                                setQ2(false);\r\n                              }}\r\n                            />\r\n                          }\r\n                          label=\"לא\"\r\n                          labelPlacement=\"start\"\r\n                        />\r\n                      </ListItem>\r\n                    </List>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                  <label component=\"legend\">\r\n                    האם בידך מזרק אפיפן בעקבות תגובה אלרגית משמעותית?\r\n                  </label>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <div className={left}>\r\n                    <List style={{padding: 0}}>\r\n                      <ListItem style={{paddingRight: 0, padding: 0}}>\r\n                        <FormControlLabel\r\n                          className={radioBox}\r\n                          style={{\r\n                            backgroundColor: q3 === true ? '#000066' : 'white',\r\n                            color: q3 === true ? 'white' : 'black',\r\n                          }}\r\n                          tabIndex=\"1\"\r\n                          control={\r\n                            <Radio\r\n                              className={radio}\r\n                              color=\"primary\"\r\n                              checked={q3 === true}\r\n                              onChange={() => {\r\n                                setQ3(true);\r\n                              }}\r\n                            />\r\n                          }\r\n                          label=\"כן\"\r\n                          labelPlacement=\"start\"\r\n                        />\r\n                        <FormControlLabel\r\n                          className={radioBox}\r\n                          style={{\r\n                            backgroundColor: q3 === false ? '#000066' : 'white',\r\n                            color: q3 === false ? 'white' : 'black',\r\n                            marginRight: '1rem',\r\n                          }}\r\n                          tabIndex=\"1\"\r\n                          control={\r\n                            <Radio\r\n                              className={radio}\r\n                              color=\"primary\"\r\n                              checked={q3 === false}\r\n                              onChange={() => {\r\n                                setQ3(false);\r\n                              }}\r\n                            />\r\n                          }\r\n                          label=\"לא\"\r\n                          labelPlacement=\"start\"\r\n                        />\r\n                      </ListItem>\r\n                    </List>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <label>\r\n                    האם פותחה בעבר תגובה אלרגית חמורה לאחר מנת החיסון הראשונה\r\n                    לנגיף הקורונה?\r\n                  </label>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <div className={left}>\r\n                    <List style={{padding: 0}}>\r\n                      <ListItem style={{paddingRight: 0, padding: 0}}>\r\n                        <FormControlLabel\r\n                          className={radioBox}\r\n                          style={{\r\n                            backgroundColor: q4 === 'yes' ? '#000066' : 'white',\r\n                            color: q4 === 'yes' ? 'white' : 'black',\r\n                          }}\r\n                          tabIndex=\"1\"\r\n                          control={\r\n                            <Radio\r\n                              className={radio}\r\n                              color=\"primary\"\r\n                              checked={q4 === 'yes'}\r\n                              onChange={() => {\r\n                                setQ4('yes');\r\n                              }}\r\n                            />\r\n                          }\r\n                          label=\"כן\"\r\n                          labelPlacement=\"start\"\r\n                        />\r\n                        <FormControlLabel\r\n                          className={radioBox}\r\n                          style={{\r\n                            backgroundColor: q4 === 'no' ? '#000066' : 'white',\r\n                            color: q4 === 'no' ? 'white' : 'black',\r\n                            marginRight: '1rem',\r\n                          }}\r\n                          tabIndex=\"1\"\r\n                          control={\r\n                            <Radio\r\n                              className={radio}\r\n                              color=\"primary\"\r\n                              checked={q4 === 'no'}\r\n                              onChange={() => {\r\n                                setQ4('no');\r\n                              }}\r\n                            />\r\n                          }\r\n                          label=\"לא\"\r\n                          labelPlacement=\"start\"\r\n                        />\r\n                        <FormControlLabel\r\n                          className={radioBox}\r\n                          style={{\r\n                            backgroundColor:\r\n                              q4 === 'first' ? '#000066' : 'white',\r\n                            color: q4 === 'first' ? 'white' : 'black',\r\n                            marginRight: '1rem',\r\n                          }}\r\n                          tabIndex=\"1\"\r\n                          control={\r\n                            <Radio\r\n                              className={radio}\r\n                              color=\"primary\"\r\n                              checked={q4 === 'first'}\r\n                              onChange={() => {\r\n                                setQ4('first');\r\n                              }}\r\n                            />\r\n                          }\r\n                          label=\"חיסון קורונה ראשון\"\r\n                          labelPlacement=\"start\"\r\n                        />\r\n                      </ListItem>\r\n                    </List>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={12} style={{paddingLeft: 0}}>\r\n                  <div className={left} style={{marginTop: '1rem'}}>\r\n                    <CoolButton\r\n                      text=\"שלח\"\r\n                      action={() => {\r\n                        if (isValid()) {\r\n                          setOpen(true);\r\n                        }\r\n                      }}\r\n                      isDisabled={!isValid()}\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </List>\r\n        </FormControl>\r\n      </div>\r\n\r\n      <SimpleDialog\r\n        open={open}\r\n        soldierId={soldierId}\r\n        setOpen={setOpen}\r\n        give={give}\r\n        setOpen2={setOpen2}\r\n      />\r\n      {/* <SimpleDialog2 open={open2}/> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddAppointment;\r\n","C:\\temp\\corona virussssssssssss\\queue-rona\\src\\components\\NavBar.js",[],"C:\\temp\\corona virussssssssssss\\queue-rona\\src\\components\\IsSoldierArrived.js",[],"C:\\temp\\corona virussssssssssss\\queue-rona\\src\\components\\VaccineConfirmation.js",["89","90","91","92","93","94","95","96"],"import React, {useEffect, useState} from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport axios from 'axios';\r\nimport {\r\n  Button,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  Paper,\r\n  Radio,\r\n  RadioGroup,\r\n  TextField,\r\n  createStyles,\r\n} from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst RadioOptions = ({value, setValue}) => {\r\n  return (\r\n    <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\">\r\n      <FormControlLabel\r\n        control={\r\n          <Radio\r\n            color=\"primary\"\r\n            checked={value === true}\r\n            onChange={() => setValue(true)}\r\n          />\r\n        }\r\n        label=\"כן\"\r\n        labelPlacement=\"start\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Radio\r\n            color=\"primary\"\r\n            checked={value === false}\r\n            onChange={() => setValue(false)}\r\n          />\r\n        }\r\n        label=\"לא\"\r\n        labelPlacement=\"start\"\r\n      />\r\n    </RadioGroup>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    button: {\r\n      backgroundColor: 'gray',\r\n    },\r\n    radio: {\r\n      display: 'none',\r\n    },\r\n    radioBox: {\r\n      backgroundColor: 'white',\r\n      cursor: 'default',\r\n      border: 'solid 1px lightGray',\r\n      display: 'block',\r\n      padding: '7px',\r\n      textAlign: 'center',\r\n      border: 'solid 1px lightGray',\r\n      outline: '0',\r\n    },\r\n  })\r\n);\r\n\r\nfunction VaccineConfirmation() {\r\n  const {button} = useStyles();\r\n  const {radio} = useStyles();\r\n  const {radioBox} = useStyles();\r\n  const [soldierId, setId] = React.useState('');\r\n  const [wasVaccinated, setWasVaccinated] = React.useState('');\r\n\r\n  async function getResult() {\r\n    const params = new URLSearchParams();\r\n    let soldierIdInteger = parseInt(soldierId);\r\n    let soldierIdWithoutZeroPrefix = soldierIdInteger.toString();\r\n    let soldierJson = {\r\n      soldierId: soldierIdWithoutZeroPrefix,\r\n      wasVaccinated: wasVaccinated,\r\n    };\r\n    params.append('0', JSON.stringify(soldierJson));\r\n    debugger;\r\n    return await axios.post(\r\n      `http://127.0.0.1:8080/${soldierIdWithoutZeroPrefix}/wasVaccinated`,\r\n      params\r\n    );\r\n  }\r\n\r\n  function isInputValid() {\r\n    return (\r\n      (soldierId.length == 7 || soldierId.length == 8) && wasVaccinated !== ''\r\n    );\r\n  }\r\n\r\n  function give() {\r\n    getResult()\r\n      .then((res) => {\r\n        alert(res.data.data);\r\n      })\r\n      .catch((rej) => {\r\n        alert(JSON.stringify(rej));\r\n      });\r\n  }\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={0}\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justify=\"center\"\r\n      style={{minHeight: '50vh'}}>\r\n      <FormControl>\r\n        <List>\r\n          <ListItem\r\n            style={{\r\n              display: 'flex',\r\n              'justify-content': 'center',\r\n              'align-items': 'center',\r\n              'font-weight': 'bold',\r\n              'font-size': '18px',\r\n            }}>\r\n            עליך להמתין במתחם במשך 15 דקות לאישור\r\n          </ListItem>\r\n          <ListItem\r\n            style={{\r\n              display: 'flex',\r\n              'justify-content': 'center',\r\n              'align-items': 'center',\r\n            }}>\r\n            הזן מספר אישי על מנת להיכנס לתור\r\n          </ListItem>\r\n          <ListItem\r\n            style={{\r\n              display: 'flex',\r\n              'justify-content': 'center',\r\n              'align-items': 'center',\r\n            }}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              value={soldierId}\r\n              onChange={(e) => setId(e?.target?.value)}\r\n            />\r\n          </ListItem>\r\n          <ListItem>\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"position\"\r\n              name=\"position\"\r\n              defaultValue=\"top\">\r\n              <ListItem\r\n                style={{\r\n                  display: 'flex',\r\n                  'justify-content': 'center',\r\n                  'align-items': 'center',\r\n                }}>\r\n                <FormControlLabel\r\n                  className={radioBox}\r\n                  style={{\r\n                    backgroundColor:\r\n                      wasVaccinated === true ? 'lightGray' : 'white',\r\n                  }}\r\n                  tabindex=\"1\"\r\n                  control={\r\n                    <Radio\r\n                      className={radio}\r\n                      color=\"primary\"\r\n                      checked={wasVaccinated === true}\r\n                      onChange={() => {\r\n                        setWasVaccinated(true);\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"התחסנתי\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </ListItem>\r\n              <ListItem\r\n                style={{\r\n                  display: 'flex',\r\n                  'justify-content': 'center',\r\n                  'align-items': 'center',\r\n                }}>\r\n                <FormControlLabel\r\n                  className={radioBox}\r\n                  style={{\r\n                    backgroundColor:\r\n                      wasVaccinated === false ? 'lightGray' : 'white',\r\n                  }}\r\n                  tabindex=\"2\"\r\n                  control={\r\n                    <Radio\r\n                      className={radio}\r\n                      color=\"primary\"\r\n                      checked={wasVaccinated === false}\r\n                      onChange={() => setWasVaccinated(false)}\r\n                    />\r\n                  }\r\n                  label=\"משהו השתבש, לא התחסנתי\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </ListItem>\r\n            </RadioGroup>\r\n          </ListItem>\r\n        </List>\r\n\r\n        <Button\r\n          className={button}\r\n          disabled={!isInputValid(soldierId)}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={give}>\r\n          שלח\r\n        </Button>\r\n      </FormControl>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default VaccineConfirmation;\r\n","C:\\temp\\corona virussssssssssss\\queue-rona\\src\\context\\users-context.js",[],"C:\\temp\\corona virussssssssssss\\queue-rona\\src\\context\\stations-context.js",[],"C:\\temp\\corona virussssssssssss\\queue-rona\\src\\utils\\api.js",[],"C:\\temp\\corona virussssssssssss\\queue-rona\\src\\components\\WaitingRoomLayout.js",["97"],"import React from 'react';\nimport {Grid, makeStyles} from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Header from './Header';\n\nconst USERS_PER_PAGE = 15;\nconst PAGE_INTERVAL_TIMEOUT = 3000;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    margin: '0 auto',\n  },\n  border: {\n    borderLeft: 'rgba(0, 0, 0, 0.12) 2px solid',\n  },\n  pagination: {\n    justifyContent: 'center',\n  },\n}));\n\nconst WaitingRoomLayout = ({\n  users,\n  stations,\n  UserComponent,\n  StationComponent,\n  waitingRoomHeader,\n  stationsHeader,\n}) => {\n  const [page, setPage] = React.useState(1);\n  const {root, pagination, border} = useStyles();\n\n  React.useEffect(() => {\n    const intervalId = setInterval(() => {\n      setPage((p) => {\n        const pagesCount = Math.ceil(users.length / USERS_PER_PAGE);\n        return p < pagesCount ? p + 1 : 1;\n      });\n    }, PAGE_INTERVAL_TIMEOUT);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  return (\n    <Grid container spacing={4}>\n      <Grid item xs={8}>\n        <Header text={waitingRoomHeader} />\n\n        <Box height=\"70vh\">\n          <Grid className={root} container direction=\"column\" spacing={1}>\n            {users\n              .slice((page - 1) * USERS_PER_PAGE, page * USERS_PER_PAGE)\n              .map((user) => (\n                <Grid item key={user.id}>\n                  <UserComponent {...user} />\n                </Grid>\n              ))}\n          </Grid>\n\n          <Pagination\n            classes={{ul: pagination}}\n            count={Math.ceil(users.length / USERS_PER_PAGE)}\n            variant=\"outlined\"\n            page={page}\n            onChange={(e, p) => setPage(p)}\n          />\n        </Box>\n      </Grid>\n\n      <Grid item xs={4} className={border}>\n        <Header text={stationsHeader} />\n\n        <Box height=\"70vh\">\n          <Grid\n            container\n            className={root}\n            direction=\"column\"\n            spacing={1}\n            xs={6}>\n            {stations.map((station) => (\n              <Grid item key={station.id}>\n                <StationComponent {...station} />\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default WaitingRoomLayout;\n","C:\\temp\\corona virussssssssssss\\queue-rona\\src\\components\\CPRWaitingRoom.js",[],"C:\\temp\\corona virussssssssssss\\queue-rona\\src\\components\\VaccineWaitingRoom.js",[],"C:\\temp\\corona virussssssssssss\\queue-rona\\src\\components\\Header.js",[],"C:\\temp\\corona virussssssssssss\\queue-rona\\src\\components\\Station.js",[],"C:\\temp\\corona virussssssssssss\\queue-rona\\src\\components\\Home.js",[],"C:\\temp\\corona virussssssssssss\\queue-rona\\src\\components\\FooterBar.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":5,"column":8,"nodeType":"104","messageId":"105","endLine":5,"endColumn":27},{"ruleId":"102","severity":1,"message":"106","line":9,"column":8,"nodeType":"104","messageId":"105","endLine":9,"endColumn":25},{"ruleId":"102","severity":1,"message":"107","line":1,"column":16,"nodeType":"104","messageId":"105","endLine":1,"endColumn":24},{"ruleId":"102","severity":1,"message":"108","line":72,"column":10,"nodeType":"104","messageId":"105","endLine":72,"endColumn":23},{"ruleId":"102","severity":1,"message":"109","line":73,"column":18,"nodeType":"104","messageId":"105","endLine":73,"endColumn":22},{"ruleId":"110","severity":1,"message":"111","line":154,"column":7,"nodeType":"112","messageId":"113","endLine":154,"endColumn":13},{"ruleId":"110","severity":1,"message":"114","line":156,"column":7,"nodeType":"112","messageId":"113","endLine":156,"endColumn":13},{"ruleId":"102","severity":1,"message":"115","line":174,"column":10,"nodeType":"104","messageId":"105","endLine":174,"endColumn":15},{"ruleId":"116","severity":1,"message":"117","line":277,"column":39,"nodeType":"118","messageId":"113","endLine":277,"endColumn":41},{"ruleId":"102","severity":1,"message":"119","line":1,"column":16,"nodeType":"104","messageId":"105","endLine":1,"endColumn":25},{"ruleId":"102","severity":1,"message":"107","line":1,"column":27,"nodeType":"104","messageId":"105","endLine":1,"endColumn":35},{"ruleId":"102","severity":1,"message":"120","line":7,"column":3,"nodeType":"104","messageId":"105","endLine":7,"endColumn":12},{"ruleId":"102","severity":1,"message":"121","line":11,"column":3,"nodeType":"104","messageId":"105","endLine":11,"endColumn":8},{"ruleId":"102","severity":1,"message":"122","line":19,"column":7,"nodeType":"104","messageId":"105","endLine":19,"endColumn":19},{"ruleId":"110","severity":1,"message":"111","line":63,"column":7,"nodeType":"112","messageId":"113","endLine":63,"endColumn":13},{"ruleId":"116","severity":1,"message":"117","line":94,"column":25,"nodeType":"118","messageId":"113","endLine":94,"endColumn":27},{"ruleId":"116","severity":1,"message":"117","line":94,"column":50,"nodeType":"118","messageId":"113","endLine":94,"endColumn":52},{"ruleId":"123","severity":1,"message":"124","line":45,"column":6,"nodeType":"125","endLine":45,"endColumn":8,"suggestions":"126"},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'VaccineConfirmation' is defined but never used.","Identifier","unusedVar","'WaitingRoomLayout' is defined but never used.","'useState' is defined but never used.","'SimpleDialog2' is defined but never used.","'text' is assigned a value but never used.","no-dupe-keys","Duplicate key 'border'.","ObjectExpression","unexpected","Duplicate key 'cursor'.","'open2' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'useEffect' is defined but never used.","'FormLabel' is defined but never used.","'Paper' is defined but never used.","'RadioOptions' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'users.length'. Either include it or remove the dependency array. If 'setPage' needs the current value of 'users.length', you can also switch to useReducer instead of useState and read 'users.length' in the reducer.","ArrayExpression",["129"],"no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},"Update the dependencies array to be: [users.length]",{"range":"132","text":"133"},[1077,1079],"[users.length]"]