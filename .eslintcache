[{"C:\\devl\\work\\queue-rona\\src\\index.js":"1","C:\\devl\\work\\queue-rona\\src\\reportWebVitals.js":"2","C:\\devl\\work\\queue-rona\\src\\context\\users-context.js":"3","C:\\devl\\work\\queue-rona\\src\\theme\\mui-theme.js":"4","C:\\devl\\work\\queue-rona\\src\\context\\stations-context.js":"5","C:\\devl\\work\\queue-rona\\src\\App.js":"6","C:\\devl\\work\\queue-rona\\src\\utils\\api.js":"7","C:\\devl\\work\\queue-rona\\src\\components\\WaitingRoomLayout.js":"8","C:\\devl\\work\\queue-rona\\src\\components\\VaccineWaitingRoom.js":"9","C:\\devl\\work\\queue-rona\\src\\components\\CPRWaitingRoom.js":"10","C:\\devl\\work\\queue-rona\\src\\components\\NavBar.js":"11","C:\\devl\\work\\queue-rona\\src\\components\\AddAppointment.js":"12","C:\\devl\\work\\queue-rona\\src\\components\\VaccineConfirmation.js":"13","C:\\devl\\work\\queue-rona\\src\\components\\Header.js":"14","C:\\devl\\work\\queue-rona\\src\\components\\Station.js":"15","C:\\devl\\work\\queue-rona\\src\\components\\ArrivalToCprStationConfirmation.js":"16"},{"size":1453,"mtime":1609011560468,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1608878763313,"results":"19","hashOfConfig":"18"},{"size":933,"mtime":1609011560467,"results":"20","hashOfConfig":"18"},{"size":232,"mtime":1608878763315,"results":"21","hashOfConfig":"18"},{"size":974,"mtime":1609011560466,"results":"22","hashOfConfig":"18"},{"size":1615,"mtime":1609031330424,"results":"23","hashOfConfig":"18"},{"size":1314,"mtime":1609011560469,"results":"24","hashOfConfig":"18"},{"size":2417,"mtime":1609011560465,"results":"25","hashOfConfig":"18"},{"size":929,"mtime":1609011560465,"results":"26","hashOfConfig":"18"},{"size":1037,"mtime":1609011560461,"results":"27","hashOfConfig":"18"},{"size":1418,"mtime":1609012112885,"results":"28","hashOfConfig":"18"},{"size":6667,"mtime":1609015882350,"results":"29","hashOfConfig":"18"},{"size":6253,"mtime":1609022724047,"results":"30","hashOfConfig":"18"},{"size":269,"mtime":1609011560461,"results":"31","hashOfConfig":"18"},{"size":785,"mtime":1609011560464,"results":"32","hashOfConfig":"18"},{"size":8207,"mtime":1609031274490,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1uabv26",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\devl\\work\\queue-rona\\src\\index.js",[],["70","71"],"C:\\devl\\work\\queue-rona\\src\\reportWebVitals.js",[],"C:\\devl\\work\\queue-rona\\src\\context\\users-context.js",[],"C:\\devl\\work\\queue-rona\\src\\theme\\mui-theme.js",[],"C:\\devl\\work\\queue-rona\\src\\context\\stations-context.js",[],"C:\\devl\\work\\queue-rona\\src\\App.js",["72"],"C:\\devl\\work\\queue-rona\\src\\utils\\api.js",[],"C:\\devl\\work\\queue-rona\\src\\components\\WaitingRoomLayout.js",["73"],"import React from 'react';\r\nimport {Grid, makeStyles} from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Header from './Header';\r\n\r\nconst USERS_PER_PAGE = 15;\r\nconst PAGE_INTERVAL_TIMEOUT = 3000;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%',\r\n    margin: '0 auto',\r\n  },\r\n  border: {\r\n    borderLeft: 'rgba(0, 0, 0, 0.12) 2px solid',\r\n  },\r\n  pagination: {\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n\r\nconst WaitingRoomLayout = ({\r\n  users,\r\n  stations,\r\n  UserComponent,\r\n  StationComponent,\r\n  waitingRoomHeader,\r\n  stationsHeader,\r\n}) => {\r\n  const [page, setPage] = React.useState(1);\r\n  const {root, pagination, border} = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setPage((p) => {\r\n        const pagesCount = Math.ceil(users.length / USERS_PER_PAGE);\r\n        return p < pagesCount ? p + 1 : 1;\r\n      });\r\n    }, PAGE_INTERVAL_TIMEOUT);\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={4}>\r\n      <Grid item xs={8}>\r\n        <Header text={waitingRoomHeader} />\r\n\r\n        <Box height=\"70vh\">\r\n          <Grid className={root} container direction=\"column\" spacing={1}>\r\n            {users\r\n              .slice((page - 1) * USERS_PER_PAGE, page * USERS_PER_PAGE)\r\n              .map((user) => (\r\n                <Grid item key={user.id}>\r\n                  <UserComponent {...user} />\r\n                </Grid>\r\n              ))}\r\n          </Grid>\r\n\r\n          <Pagination\r\n            classes={{ul: pagination}}\r\n            count={Math.ceil(users.length / USERS_PER_PAGE)}\r\n            variant=\"outlined\"\r\n            page={page}\r\n            onChange={(e, p) => setPage(p)}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n\r\n      <Grid item xs={4} className={border}>\r\n        <Header text={stationsHeader} />\r\n\r\n        <Box height=\"70vh\">\r\n          <Grid\r\n            container\r\n            className={root}\r\n            direction=\"column\"\r\n            spacing={1}\r\n            xs={6}>\r\n            {stations.map((station) => (\r\n              <Grid item key={station.id}>\r\n                <StationComponent {...station} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default WaitingRoomLayout;\r\n","C:\\devl\\work\\queue-rona\\src\\components\\VaccineWaitingRoom.js",[],"C:\\devl\\work\\queue-rona\\src\\components\\CPRWaitingRoom.js",[],"C:\\devl\\work\\queue-rona\\src\\components\\NavBar.js",[],"C:\\devl\\work\\queue-rona\\src\\components\\AddAppointment.js",["74","75","76"],"import React, {useState} from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  Button,\r\n  FormControlLabel,\r\n  List,\r\n  ListItem,\r\n  Radio,\r\n  RadioGroup,\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  createStyles,\r\n} from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst TIMEOUT = 1000;\r\n\r\nfunction SimpleDialog({open}) {\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>תורך נשלח!</DialogTitle>\r\n      <DialogContent>\r\n        <Typography variant=\"body1\">\r\n          אנא הכנס לאולם והמתן ביציע החיסונים\r\n        </Typography>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nconst RadioOptions = ({value, setValue}) => {\r\n  return (\r\n    <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\">\r\n      <FormControlLabel\r\n        control={\r\n          <Radio\r\n            color=\"primary\"\r\n            checked={value === true}\r\n            onChange={() => setValue(true)}\r\n          />\r\n        }\r\n        label=\"כן\"\r\n        labelPlacement=\"start\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Radio\r\n            color=\"primary\"\r\n            checked={value === false}\r\n            onChange={() => setValue(false)}\r\n          />\r\n        }\r\n        label=\"לא\"\r\n        labelPlacement=\"start\"\r\n      />\r\n    </RadioGroup>\r\n  );\r\n};\r\n\r\nconst CoolButton = ({text, action}) => {\r\n  const {button} = useStyles();\r\n  return (\r\n    <Button\r\n      className={button}\r\n      variant=\"outlined\"\r\n      color=\"default\"\r\n      onClick={() => {\r\n        action();\r\n      }}>\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    button: {\r\n      width: 'fit-content',\r\n    },\r\n    background: {\r\n      'background-color': '#EEEEEE',\r\n    },\r\n    center: {\r\n      display: 'flex',\r\n      'justify-content': 'center',\r\n      'align-items': 'center',\r\n    },\r\n    bold: {\r\n      'font-weight': 'bold',\r\n    },\r\n    white: {\r\n      input: {\r\n        'background-color': 'white !important',\r\n      },\r\n    },\r\n    fullWidth: {\r\n      width: '100%',\r\n    },\r\n    left: {\r\n      float: 'right',\r\n    },\r\n    grid: {\r\n      'text-align': 'left !important',\r\n      width: '50%',\r\n      display: 'inline-block !important',\r\n    },\r\n  })\r\n);\r\n\r\nconst AddAppointment = () => {\r\n  const {background, center, bold, white, fullWidth, left, grid} = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [soldierId, setId] = React.useState('');\r\n  const [q1, setQ1] = React.useState();\r\n  const [q2, setQ2] = React.useState();\r\n  const [q3, setQ3] = React.useState();\r\n\r\n  async function getResult() {\r\n    const params = new URLSearchParams();\r\n    let article = {ID: soldierId};\r\n    params.append('0', JSON.stringify(article));\r\n    return await axios.post(\r\n      'http://corona-server.azurewebsites.net/AddSoldierToArrivalQueue',\r\n      params\r\n    );\r\n  }\r\n\r\n  const [data, setData] = useState({hits: []});\r\n  function give() {\r\n    getResult()\r\n      .then((res) => {\r\n        alert(res.data.data);\r\n      })\r\n      .catch((res) => {\r\n        alert(res.data.data);\r\n      });\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={background}>\r\n        <FormControl>\r\n          <List>\r\n            <ListItem>\r\n              <label className={center + ' ' + fullWidth}>הזן מספר אישי</label>\r\n            </ListItem>\r\n            <ListItem>\r\n              <div className={fullWidth}>\r\n                <TextField\r\n                  className={center + ' ' + white}\r\n                  variant=\"outlined\"\r\n                  value={soldierId}\r\n                  onChange={(e) => setId(e?.target?.value)}\r\n                />\r\n\r\n              </div>\r\n            </ListItem>\r\n            <div className={grid + ' ' + center}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <label className={bold}>אנא ענו על השאלות הבאות</label>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                  <div>\r\n                    <label component=\"legend\">\r\n                      האם סבלת ממחלה עם חום מעל 38° ביומיים האחרונים ?\r\n                    </label>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <div className={left}>\r\n                    <RadioOptions value={q1} setValue={setQ1} />\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                  <label component=\"legend\">\r\n                    האם ידועה אלרגיה לתרופה, חיסון או מזון ?\r\n                  </label>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <div className={left}>\r\n                    <RadioOptions value={q2} setValue={setQ2} />\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                  <label component=\"legend\">\r\n                    האם בידך מזרק אפיפן בעקבות תגובה אלרגית משמעותית ?\r\n                  </label>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <div className={left}>\r\n                    <RadioOptions value={q3} setValue={setQ3} />\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <label>\r\n                    האם פותחה בעבר תגובה אלרגית חמורה לאחר מנת החיסון הראשונה\r\n                    לנגיף הקורונה ?\r\n                  </label>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <div className={left}>\r\n                    <RadioOptions value={q3} setValue={setQ3} />\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <div className={left}>\r\n                    <CoolButton\r\n                      text=\"שלח\"\r\n                      action={() => {\r\n                        setOpen(true);\r\n                        setTimeout(() => setOpen(false), TIMEOUT);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </List>\r\n        </FormControl>\r\n      </div>\r\n\r\n\r\n      <SimpleDialog open={open} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddAppointment;\r\n","C:\\devl\\work\\queue-rona\\src\\components\\VaccineConfirmation.js",["77","78","79","80","81","82","83","84","85"],"import React, { useEffect, useState } from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport axios from 'axios';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {\r\n  Button,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  Paper,\r\n  Radio,\r\n  RadioGroup,\r\n  TextField,\r\n  createStyles,\r\n} from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst RadioOptions = ({ value, setValue }) => {\r\n  return (\r\n    <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\">\r\n      <FormControlLabel\r\n        control={\r\n          <Radio\r\n            color=\"primary\"\r\n            checked={value === true}\r\n            onChange={() => setValue(true)}\r\n          />\r\n        }\r\n        label=\"כן\"\r\n        labelPlacement=\"start\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Radio\r\n            color=\"primary\"\r\n            checked={value === false}\r\n            onChange={() => setValue(false)}\r\n          />\r\n        }\r\n        label=\"לא\"\r\n        labelPlacement=\"start\"\r\n      />\r\n    </RadioGroup>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    button: {\r\n      backgroundColor: 'gray',\r\n    },\r\n    radio: {\r\n      display: 'none',\r\n    },\r\n    radioBox: {\r\n      backgroundColor: 'white',\r\n      cursor: 'default',\r\n      border: 'solid 1px lightGray',\r\n      display: 'block',\r\n      padding: '7px',\r\n      textAlign: 'center',\r\n      border: 'solid 1px lightGray',\r\n      outline: '0',\r\n    },\r\n  })\r\n);\r\n\r\nfunction VaccineConfirmation() {\r\n  const { button } = useStyles();\r\n  const { radio } = useStyles();\r\n  const { radioBox } = useStyles();\r\n  const [soldierId, setId] = React.useState('');\r\n  const [wasVaccinated, setWasVaccinated] = React.useState('');\r\n\r\n  async function getResult() {\r\n    const params = new URLSearchParams();\r\n    let soldierIdInteger = parseInt(soldierId);\r\n    let soldierIdWithoutZeroPrefix = soldierIdInteger.toString();\r\n    let soldierJson = {\r\n      soldierId: soldierIdWithoutZeroPrefix,\r\n      wasVaccinated: wasVaccinated,\r\n    };\r\n    params.append('0', JSON.stringify(soldierJson));\r\n    debugger;\r\n    return await axios.post(\r\n      `http://corona-server.azurewebsites.net/${soldierIdWithoutZeroPrefix}/wasVaccinated`,\r\n      params\r\n    );\r\n  }\r\n\r\n  function isInputValid() {\r\n    return (\r\n      (soldierId.length == 7 || soldierId.length == 8) && wasVaccinated !== ''\r\n    );\r\n  }\r\n\r\n  function give() {\r\n    getResult()\r\n      .then((res) => {\r\n        alert(res.data.data);\r\n      })\r\n      .catch((rej) => {\r\n        alert(JSON.stringify(rej));\r\n      });\r\n  }\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={0}\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justify=\"center\"\r\n      style={{ minHeight: '50vh' }}>\r\n      <FormControl>\r\n        <List>\r\n          <ListItem\r\n            style={{\r\n              display: 'flex',\r\n              'justify-content': 'center',\r\n              'align-items': 'center',\r\n              'font-weight': 'bold',\r\n              'font-size': '18px',\r\n            }}>\r\n            יש לסרוק את הברקוד המופיע על החוגר\r\n          </ListItem>\r\n          <ListItem\r\n            style={{\r\n              display: 'flex',\r\n              'justify-content': 'center',\r\n              'align-items': 'center',\r\n            }}>\r\n            הזן מספר אישי על מנת להיכנס לתור\r\n          </ListItem>\r\n          <ListItem\r\n            style={{\r\n              display: 'flex',\r\n              'justify-content': 'center',\r\n              'align-items': 'center',\r\n            }}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              inputProps={\r\n                {\r\n                  maxLength: \"8\"\r\n                }\r\n              }\r\n              value={soldierId}\r\n              onChange={(e) => setId(e?.target?.value)}\r\n            />\r\n          </ListItem>\r\n          <ListItem\r\n            style={{\r\n              display: 'flex',\r\n              'justify-content': 'center',\r\n              'align-items': 'center',\r\n            }}>\r\n            האם החייל התחסן?\r\n          </ListItem>\r\n          <ListItem\r\n            style={{\r\n              display: 'flex',\r\n              'justify-content': 'center',\r\n              'align-items': 'center',\r\n            }}>\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"position\"\r\n              name=\"position\"\r\n              defaultValue=\"top\">\r\n              <FormControlLabel\r\n                className={radioBox}\r\n                style={{\r\n                  backgroundColor:\r\n                    wasVaccinated === false ? 'lightGray' : 'white',\r\n                }}\r\n                tabindex=\"2\"\r\n                control={\r\n                  <Radio\r\n                    className={radio}\r\n                    color=\"primary\"\r\n                    checked={wasVaccinated === false}\r\n                    onChange={() => setWasVaccinated(false)}\r\n                  />\r\n                }\r\n                label=\"❌ לא, משהו השתבש\"\r\n\r\n                labelPlacement=\"start\"\r\n              />\r\n              <FormControlLabel\r\n                className={radioBox}\r\n                style={{\r\n                  backgroundColor:\r\n                    wasVaccinated === true ? 'lightGray' : 'white',\r\n                }}\r\n                tabindex=\"1\"\r\n                control={\r\n                  <Radio\r\n                    className={radio}\r\n                    color=\"primary\"\r\n                    checked={wasVaccinated === true}\r\n                    onChange={() => {\r\n                      setWasVaccinated(true);\r\n                    }}\r\n                  />\r\n                }\r\n                label=\"✔️ כן, התחסן\"\r\n                labelPlacement=\"start\"\r\n              />\r\n            </RadioGroup>\r\n          </ListItem>\r\n        </List>\r\n\r\n        <Button\r\n          className={button}\r\n          disabled={!isInputValid(soldierId)}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={give}>\r\n          שלח\r\n        </Button>\r\n      </FormControl>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default VaccineConfirmation;\r\n","C:\\devl\\work\\queue-rona\\src\\components\\Header.js",[],"C:\\devl\\work\\queue-rona\\src\\components\\Station.js",[],"C:\\devl\\work\\queue-rona\\src\\components\\ArrivalToCprStationConfirmation.js",["86","87","88","89","90","91","92","93","94"],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":9,"column":8,"nodeType":"101","messageId":"102","endLine":9,"endColumn":25},{"ruleId":"103","severity":1,"message":"104","line":45,"column":6,"nodeType":"105","endLine":45,"endColumn":8,"suggestions":"106"},{"ruleId":"99","severity":1,"message":"107","line":135,"column":10,"nodeType":"101","messageId":"102","endLine":135,"endColumn":14},{"ruleId":"99","severity":1,"message":"108","line":135,"column":16,"nodeType":"101","messageId":"102","endLine":135,"endColumn":23},{"ruleId":"99","severity":1,"message":"109","line":136,"column":12,"nodeType":"101","messageId":"102","endLine":136,"endColumn":16},{"ruleId":"99","severity":1,"message":"110","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":26},{"ruleId":"99","severity":1,"message":"111","line":1,"column":28,"nodeType":"101","messageId":"102","endLine":1,"endColumn":36},{"ruleId":"99","severity":1,"message":"112","line":4,"column":8,"nodeType":"101","messageId":"102","endLine":4,"endColumn":14},{"ruleId":"99","severity":1,"message":"113","line":8,"column":3,"nodeType":"101","messageId":"102","endLine":8,"endColumn":12},{"ruleId":"99","severity":1,"message":"114","line":12,"column":3,"nodeType":"101","messageId":"102","endLine":12,"endColumn":8},{"ruleId":"99","severity":1,"message":"115","line":20,"column":7,"nodeType":"101","messageId":"102","endLine":20,"endColumn":19},{"ruleId":"116","severity":1,"message":"117","line":64,"column":7,"nodeType":"118","messageId":"119","endLine":64,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":95,"column":25,"nodeType":"122","messageId":"119","endLine":95,"endColumn":27},{"ruleId":"120","severity":1,"message":"121","line":95,"column":50,"nodeType":"122","messageId":"119","endLine":95,"endColumn":52},{"ruleId":"99","severity":1,"message":"110","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":26},{"ruleId":"99","severity":1,"message":"111","line":1,"column":28,"nodeType":"101","messageId":"102","endLine":1,"endColumn":36},{"ruleId":"99","severity":1,"message":"123","line":54,"column":10,"nodeType":"101","messageId":"102","endLine":54,"endColumn":25},{"ruleId":"103","severity":1,"message":"124","line":73,"column":6,"nodeType":"105","endLine":73,"endColumn":8,"suggestions":"125"},{"ruleId":"103","severity":1,"message":"126","line":78,"column":6,"nodeType":"105","endLine":78,"endColumn":18,"suggestions":"127"},{"ruleId":"99","severity":1,"message":"128","line":96,"column":12,"nodeType":"101","messageId":"102","endLine":96,"endColumn":24},{"ruleId":"120","severity":1,"message":"121","line":98,"column":25,"nodeType":"122","messageId":"119","endLine":98,"endColumn":27},{"ruleId":"120","severity":1,"message":"121","line":98,"column":50,"nodeType":"122","messageId":"119","endLine":98,"endColumn":52},{"ruleId":"99","severity":1,"message":"129","line":131,"column":12,"nodeType":"101","messageId":"102","endLine":131,"endColumn":27},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'WaitingRoomLayout' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'users.length'. Either include it or remove the dependency array. If 'setPage' needs the current value of 'users.length', you can also switch to useReducer instead of useState and read 'users.length' in the reducer.","ArrayExpression",["132"],"'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'give' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Avatar' is defined but never used.","'FormLabel' is defined but never used.","'Paper' is defined but never used.","'RadioOptions' is assigned a value but never used.","no-dupe-keys","Duplicate key 'border'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'isRadiosEnabled' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'isBusyWithSoldier'. Either include it or remove the dependency array.",["133"],"React Hook React.useEffect has a missing dependency: 'giveArrivedResult'. Either include it or remove the dependency array.",["134"],"'isInputValid' is defined but never used.","'callNextSoldier' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [users.length]",{"range":"141","text":"142"},"Update the dependencies array to be: [isBusyWithSoldier]",{"range":"143","text":"144"},"Update the dependencies array to be: [giveArrivedResult, wasArrived]",{"range":"145","text":"146"},[1077,1079],"[users.length]",[1944,1946],"[isBusyWithSoldier]",[2040,2052],"[giveArrivedResult, wasArrived]"]